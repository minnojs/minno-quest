{"version":3,"file":"activatePIP.js","sources":["app/task/script.js","app/task/settings.js","app/trial/current_trial.js","app/task/adjust_canvas.js","app/task/canvasConstructor.js","../../bower_components/requirejs-text/text.js","templates/loading.html!text","app/task/main_view.js","models/set.js","app/sets_constructor.js","app/trial/trial_sets.js","app/stimulus/stimulus_sets.js","app/media/media_sets.js","models/collection.js","app/sequencer/sourceSequence.js","utils/mixer.js","utils/preloader.js","app/task/build_url.js","app/sequencer/sequencePreload.js","app/task/parser.js","app/sequencer/trialSequence.js","utils/pubsub.js","utils/is_touch.js","utils/interface/bindings/click.js","utils/interface/bindings/keypressed.js","utils/interface/bindings/keyup.js","utils/timeout.js","utils/simpleRandomize.js","utils/interface/bindings/timeout.js","utils/interface/binder.js","utils/interface/triggerEvent.js","utils/interface/listener.js","utils/now.js","utils/interface/interface.js","models/model.js","app/media/media_view.js","app/global.js","app/inflator.js","utils/html.js","app/media/media_constructor.js","app/stimulus/stimulus_model.js","app/stimulus/stimulus_constructor.js","app/stimulus/stimulus_collection.js","app/trial/evaluate.js","app/trial/action_list.js","app/trial/action.js","app/trial/interactions.js","app/trial/trial_constructor.js","app/task/log/post.js","app/task/log/log_stack.js","app/task/log/logger.js","app/sequencer/player.js","activatePIP.js","extensions/dscore/computeD.js","extensions/dscore/msgMan.js","extensions/dscore/parcelMng.js","extensions/dscore/Scorer.js","API.js"],"names":[],"mappings":"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","sourcesContent":["/*\n * this file holds the script we are to run\n */\n\ndefine('app/task/script',[],function(){\n\tvar scriptObj = {};\n\n\t/**\n\t * Getter/Setter fo script\n\t *\n\t * @param  {Object || null} obj \tThe new script, if it is not set this is simply a getter.\n\t * @return {Object}     \t\t\tThe full script\n\t */\n\tfunction script(obj){\n\t\tobj && (scriptObj = obj);\n\t\treturn scriptObj;\n\t}\n\n\treturn script;\n});\n","/*\n * simply take settings out of the script\n */\ndefine('app/task/settings',['./script'],function(script){\n\n\t/**\n\t * get settings from script\n\t * @param  {String} name  \t\tOptional name of specific setting to get\n\t * @return {*}         \t\t\tThe settings object (or a sub of it)\n\t */\n\tfunction settingsGetter(name){\n\t\tvar settings = script().settings || {};\n\n\t\tif (name) {\n\t\t\treturn settings[name];\n\t\t}\n\t\treturn settings;\n\t}\n\n\treturn settingsGetter;\n});\n","define('app/trial/current_trial',[],function(){\n\t/*\n\t * holds a \"global\" instance of the current trial so we don't have to pass it on blindly.\n\t *\n\t * returns a function that return trial.\n\t * if it gets input, it replaces the current trial with the input;\n\t */\n\n\tvar trial;\n\n\treturn function(newTrial){\n\t\tif (newTrial) {\n\t\t\ttrial = newTrial;\n\t\t}\n\n\t\treturn trial;\n\t};\n});\n","/*\n * adjust canvas according to window size and settings\n * this module is built to be part of the main view\n */\ndefine('app/task/adjust_canvas',['jquery','app/task/settings','app/trial/current_trial'],function($, settingsGetter, trial){\n\n\t// the function to be used by the main view\n\tfunction adjust_canvas(init){\n\t\tvar self = this;\n\t\t// get canvas settings\n\t\tvar settings = settingsGetter('canvas') || {};\n\n\t\t// calculate proportions (as height/width)\n\t\tvar proportions;\n\t\tif (settings.proportions) {\n\t\t\tif ($.isPlainObject(settings.proportions)) {\n\t\t\t\tif (typeof settings.proportions.height !== 'number' || typeof settings.proportions.width !== 'number'){\n\t\t\t\t\tthrow new Error('The canvas proportions object`s height and a width properties must be numeric');\n\t\t\t\t}\n\t\t\t\tproportions = settings.proportions.height/settings.proportions.width; // if proportions are an object they should include width and height\n\t\t\t} else {\n\t\t\t\tproportions = settings.proportions || 0.8; // by default proportions are 0.8\n\t\t\t}\n\t\t}\n\n\t\t// we put this in a time out because of a latency of orientation change on android devices\n\t\tsetTimeout(resize,init ? 0 : 500); // end timeout\n\n\t\tfunction resize(){\n\t\t\tvar height, width;\n\n\t\t\t// static canvas size\n\t\t\tif (settings.width){\n\t\t\t\t// if this is not init, we've already set screen size, so don't mess around\n\t\t\t\tif (!init){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\twidth = settings.width;\n\t\t\t\theight = width*proportions;\n\n\t\t\t} else { // dynamic canvas size\n\t\t\t\t// get current screen size\n\t\t\t\tvar screenSize = {\n\t\t\t\t\twidth: $(window).innerWidth(),\n\t\t\t\t\theight: $(window).innerHeight()\n\t\t\t\t};\n\n\t\t\t\tvar maxHeight = screenSize.height;\n\t\t\t\tvar maxWidth = Math.min(settings.maxWidth, screenSize.width);\n\n\t\t\t\t// calculate the correct size for this screen size\n\t\t\t\tif (maxHeight > proportions * maxWidth) {\n\t\t\t\t\theight = maxWidth*proportions;\n\t\t\t\t\twidth = maxWidth;\n\t\t\t\t} else {\n\t\t\t\t\theight = maxHeight;\n\t\t\t\t\twidth = maxHeight/proportions;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// remove border width and top margin from calculated width (can't depend on cool box styles yet...)\n\t\t\t// we compute only margin-top because of a difference calculating margins between chrome + IE and firefox + mobile\n\t\t\theight -= parseInt(self.$el.css('border-top-width'),10) + parseInt(self.$el.css('border-bottom-width'),10) + parseInt(self.$el.css('margin-top'),10);\n\t\t\twidth -= parseInt(self.$el.css('border-left-width'),10) + parseInt(self.$el.css('border-right-width'),10);\n\n\t\t\t// reset canvas size\n\t\t\tself.$el.width(width);\n\t\t\tself.$el.height(height);\n\t\t\tself.$el.css('font-size',height*(settings.textSize || 3)/100);\n\n\t\t\t// refresh all stimuli (we don't want to do this before we have trials)\n\t\t\tif (trial()) {\n\t\t\t\ttrial()._layout_collection.refresh();\n\t\t\t\ttrial()._stimulus_collection.refresh();\n\t\t\t}\n\n\t\t\t// scroll to top of window (hides some of the mess on the top of mobile devices)\n\t\t\twindow.scrollTo(0, 1);\n\t\t}\n\t}\n\n\treturn adjust_canvas;\n});\n","/**\n *\n * This whole module taken from piManager\n *\n */\ndefine('app/task/canvasConstructor',['require','underscore'],function(require){\n\n\tvar _ = require('underscore');\n\n\t/**\n\t * Takes a map of css rules and applies them.\n\t * Returns a function that returns the page to its former condition.\n\t *\n\t * The rule map is an object of ruleName -> ruleObject.\n\t *\n\t * var ruleObject = {\n\t * \telement : wrapped element to affect\n\t * \tproperty: css property to modify\n\t * }\n\t *\n\t * @param  {Object} map      A hash of rules.\n\t * @param  {Object} settings A hash of ruleName -> value\n\t * @return {Function}        A function that undoes all the previous changes\n\t */\n\tfunction canvasContructor(map, settings){\n\t\tvar offArr;\n\n\t\tif (!_.isPlainObject(map)){\n\t\t\tthrow new Error('canvas(map): You must set a rule map for canvas to work properly');\n\t\t}\n\n\t\t// if settings is undefined return a function that doesn't do anything\n\t\t// just so we don't need to make sure that the user modifies the canvas\n\t\tif (_.isUndefined(settings)){\n\t\t\treturn _.noop;\n\t\t}\n\n\t\tif (!_.isPlainObject(settings)){\n\t\t\tthrow new Error('canvas(settings): canvas settings must be an object');\n\t\t}\n\n\t\t// create an array of off functions to undo any changes by this action\n\t\toffArr = _.map(settings, function(value,key){\n\t\t\tvar rule = map[key];\n\t\t\tif (rule){\n\t\t\t\treturn on(rule.element, rule.property, value);\n\t\t\t} else {\n\t\t\t\tthrow new Error('canvas('+ key +'): unknow key in canvas object.');\n\t\t\t}\n\t\t});\n\n\t\treturn function off(){\n\t\t\t_.forEach(offArr, function(fn){fn.call();});\n\t\t};\n\t}\n\n\tfunction on($el, property, value){\n\t\tvar old = $el.css(property); // save old value\n\t\t$el.css(property, value); // set new value\n\t\treturn _.bind($el.css, $el, property, old); // create off function: bind $el.css(property, old)\n\t}\n\n\treturn canvasContructor;\n\n});\n","/**\n * @license RequireJS text 2.0.12 Copyright (c) 2010-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/requirejs/text for details\n */\n/*jslint regexp: true */\n/*global require, XMLHttpRequest, ActiveXObject,\n  define, window, process, Packages,\n  java, location, Components, FileUtils */\n\ndefine('text',['module'], function (module) {\n    'use strict';\n\n    var text, fs, Cc, Ci, xpcIsWindows,\n        progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'],\n        xmlRegExp = /^\\s*<\\?xml(\\s)+version=[\\'\\\"](\\d)*.(\\d)*[\\'\\\"](\\s)*\\?>/im,\n        bodyRegExp = /<body[^>]*>\\s*([\\s\\S]+)\\s*<\\/body>/im,\n        hasLocation = typeof location !== 'undefined' && location.href,\n        defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\\:/, ''),\n        defaultHostName = hasLocation && location.hostname,\n        defaultPort = hasLocation && (location.port || undefined),\n        buildMap = {},\n        masterConfig = (module.config && module.config()) || {};\n\n    text = {\n        version: '2.0.12',\n\n        strip: function (content) {\n            //Strips <?xml ...?> declarations so that external SVG and XML\n            //documents can be added to a document without worry. Also, if the string\n            //is an HTML document, only the part inside the body tag is returned.\n            if (content) {\n                content = content.replace(xmlRegExp, \"\");\n                var matches = content.match(bodyRegExp);\n                if (matches) {\n                    content = matches[1];\n                }\n            } else {\n                content = \"\";\n            }\n            return content;\n        },\n\n        jsEscape: function (content) {\n            return content.replace(/(['\\\\])/g, '\\\\$1')\n                .replace(/[\\f]/g, \"\\\\f\")\n                .replace(/[\\b]/g, \"\\\\b\")\n                .replace(/[\\n]/g, \"\\\\n\")\n                .replace(/[\\t]/g, \"\\\\t\")\n                .replace(/[\\r]/g, \"\\\\r\")\n                .replace(/[\\u2028]/g, \"\\\\u2028\")\n                .replace(/[\\u2029]/g, \"\\\\u2029\");\n        },\n\n        createXhr: masterConfig.createXhr || function () {\n            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.\n            var xhr, i, progId;\n            if (typeof XMLHttpRequest !== \"undefined\") {\n                return new XMLHttpRequest();\n            } else if (typeof ActiveXObject !== \"undefined\") {\n                for (i = 0; i < 3; i += 1) {\n                    progId = progIds[i];\n                    try {\n                        xhr = new ActiveXObject(progId);\n                    } catch (e) {}\n\n                    if (xhr) {\n                        progIds = [progId];  // so faster next time\n                        break;\n                    }\n                }\n            }\n\n            return xhr;\n        },\n\n        /**\n         * Parses a resource name into its component parts. Resource names\n         * look like: module/name.ext!strip, where the !strip part is\n         * optional.\n         * @param {String} name the resource name\n         * @returns {Object} with properties \"moduleName\", \"ext\" and \"strip\"\n         * where strip is a boolean.\n         */\n        parseName: function (name) {\n            var modName, ext, temp,\n                strip = false,\n                index = name.indexOf(\".\"),\n                isRelative = name.indexOf('./') === 0 ||\n                             name.indexOf('../') === 0;\n\n            if (index !== -1 && (!isRelative || index > 1)) {\n                modName = name.substring(0, index);\n                ext = name.substring(index + 1, name.length);\n            } else {\n                modName = name;\n            }\n\n            temp = ext || modName;\n            index = temp.indexOf(\"!\");\n            if (index !== -1) {\n                //Pull off the strip arg.\n                strip = temp.substring(index + 1) === \"strip\";\n                temp = temp.substring(0, index);\n                if (ext) {\n                    ext = temp;\n                } else {\n                    modName = temp;\n                }\n            }\n\n            return {\n                moduleName: modName,\n                ext: ext,\n                strip: strip\n            };\n        },\n\n        xdRegExp: /^((\\w+)\\:)?\\/\\/([^\\/\\\\]+)/,\n\n        /**\n         * Is an URL on another domain. Only works for browser use, returns\n         * false in non-browser environments. Only used to know if an\n         * optimized .js version of a text resource should be loaded\n         * instead.\n         * @param {String} url\n         * @returns Boolean\n         */\n        useXhr: function (url, protocol, hostname, port) {\n            var uProtocol, uHostName, uPort,\n                match = text.xdRegExp.exec(url);\n            if (!match) {\n                return true;\n            }\n            uProtocol = match[2];\n            uHostName = match[3];\n\n            uHostName = uHostName.split(':');\n            uPort = uHostName[1];\n            uHostName = uHostName[0];\n\n            return (!uProtocol || uProtocol === protocol) &&\n                   (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&\n                   ((!uPort && !uHostName) || uPort === port);\n        },\n\n        finishLoad: function (name, strip, content, onLoad) {\n            content = strip ? text.strip(content) : content;\n            if (masterConfig.isBuild) {\n                buildMap[name] = content;\n            }\n            onLoad(content);\n        },\n\n        load: function (name, req, onLoad, config) {\n            //Name has format: some.module.filext!strip\n            //The strip part is optional.\n            //if strip is present, then that means only get the string contents\n            //inside a body tag in an HTML string. For XML/SVG content it means\n            //removing the <?xml ...?> declarations so the content can be inserted\n            //into the current doc without problems.\n\n            // Do not bother with the work if a build and text will\n            // not be inlined.\n            if (config && config.isBuild && !config.inlineText) {\n                onLoad();\n                return;\n            }\n\n            masterConfig.isBuild = config && config.isBuild;\n\n            var parsed = text.parseName(name),\n                nonStripName = parsed.moduleName +\n                    (parsed.ext ? '.' + parsed.ext : ''),\n                url = req.toUrl(nonStripName),\n                useXhr = (masterConfig.useXhr) ||\n                         text.useXhr;\n\n            // Do not load if it is an empty: url\n            if (url.indexOf('empty:') === 0) {\n                onLoad();\n                return;\n            }\n\n            //Load the text. Use XHR if possible and in a browser.\n            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {\n                text.get(url, function (content) {\n                    text.finishLoad(name, parsed.strip, content, onLoad);\n                }, function (err) {\n                    if (onLoad.error) {\n                        onLoad.error(err);\n                    }\n                });\n            } else {\n                //Need to fetch the resource across domains. Assume\n                //the resource has been optimized into a JS module. Fetch\n                //by the module name + extension, but do not include the\n                //!strip part to avoid file system issues.\n                req([nonStripName], function (content) {\n                    text.finishLoad(parsed.moduleName + '.' + parsed.ext,\n                                    parsed.strip, content, onLoad);\n                });\n            }\n        },\n\n        write: function (pluginName, moduleName, write, config) {\n            if (buildMap.hasOwnProperty(moduleName)) {\n                var content = text.jsEscape(buildMap[moduleName]);\n                write.asModule(pluginName + \"!\" + moduleName,\n                               \"define(function () { return '\" +\n                                   content +\n                               \"';});\\n\");\n            }\n        },\n\n        writeFile: function (pluginName, moduleName, req, write, config) {\n            var parsed = text.parseName(moduleName),\n                extPart = parsed.ext ? '.' + parsed.ext : '',\n                nonStripName = parsed.moduleName + extPart,\n                //Use a '.js' file name so that it indicates it is a\n                //script that can be loaded across domains.\n                fileName = req.toUrl(parsed.moduleName + extPart) + '.js';\n\n            //Leverage own load() method to load plugin value, but only\n            //write out values that do not have the strip argument,\n            //to avoid any potential issues with ! in file names.\n            text.load(nonStripName, req, function (value) {\n                //Use own write() method to construct full module value.\n                //But need to create shell that translates writeFile's\n                //write() to the right interface.\n                var textWrite = function (contents) {\n                    return write(fileName, contents);\n                };\n                textWrite.asModule = function (moduleName, contents) {\n                    return write.asModule(moduleName, fileName, contents);\n                };\n\n                text.write(pluginName, nonStripName, textWrite, config);\n            }, config);\n        }\n    };\n\n    if (masterConfig.env === 'node' || (!masterConfig.env &&\n            typeof process !== \"undefined\" &&\n            process.versions &&\n            !!process.versions.node &&\n            !process.versions['node-webkit'])) {\n        //Using special require.nodeRequire, something added by r.js.\n        fs = require.nodeRequire('fs');\n\n        text.get = function (url, callback, errback) {\n            try {\n                var file = fs.readFileSync(url, 'utf8');\n                //Remove BOM (Byte Mark Order) from utf8 files if it is there.\n                if (file.indexOf('\\uFEFF') === 0) {\n                    file = file.substring(1);\n                }\n                callback(file);\n            } catch (e) {\n                if (errback) {\n                    errback(e);\n                }\n            }\n        };\n    } else if (masterConfig.env === 'xhr' || (!masterConfig.env &&\n            text.createXhr())) {\n        text.get = function (url, callback, errback, headers) {\n            var xhr = text.createXhr(), header;\n            xhr.open('GET', url, true);\n\n            //Allow plugins direct access to xhr headers\n            if (headers) {\n                for (header in headers) {\n                    if (headers.hasOwnProperty(header)) {\n                        xhr.setRequestHeader(header.toLowerCase(), headers[header]);\n                    }\n                }\n            }\n\n            //Allow overrides specified in config\n            if (masterConfig.onXhr) {\n                masterConfig.onXhr(xhr, url);\n            }\n\n            xhr.onreadystatechange = function (evt) {\n                var status, err;\n                //Do not explicitly handle errors, those should be\n                //visible via console output in the browser.\n                if (xhr.readyState === 4) {\n                    status = xhr.status || 0;\n                    if (status > 399 && status < 600) {\n                        //An http 4xx or 5xx error. Signal an error.\n                        err = new Error(url + ' HTTP status: ' + status);\n                        err.xhr = xhr;\n                        if (errback) {\n                            errback(err);\n                        }\n                    } else {\n                        callback(xhr.responseText);\n                    }\n\n                    if (masterConfig.onXhrComplete) {\n                        masterConfig.onXhrComplete(xhr, url);\n                    }\n                }\n            };\n            xhr.send(null);\n        };\n    } else if (masterConfig.env === 'rhino' || (!masterConfig.env &&\n            typeof Packages !== 'undefined' && typeof java !== 'undefined')) {\n        //Why Java, why is this so awkward?\n        text.get = function (url, callback) {\n            var stringBuffer, line,\n                encoding = \"utf-8\",\n                file = new java.io.File(url),\n                lineSeparator = java.lang.System.getProperty(\"line.separator\"),\n                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),\n                content = '';\n            try {\n                stringBuffer = new java.lang.StringBuffer();\n                line = input.readLine();\n\n                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324\n                // http://www.unicode.org/faq/utf_bom.html\n\n                // Note that when we use utf-8, the BOM should appear as \"EF BB BF\", but it doesn't due to this bug in the JDK:\n                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058\n                if (line && line.length() && line.charAt(0) === 0xfeff) {\n                    // Eat the BOM, since we've already found the encoding on this file,\n                    // and we plan to concatenating this buffer with others; the BOM should\n                    // only appear at the top of a file.\n                    line = line.substring(1);\n                }\n\n                if (line !== null) {\n                    stringBuffer.append(line);\n                }\n\n                while ((line = input.readLine()) !== null) {\n                    stringBuffer.append(lineSeparator);\n                    stringBuffer.append(line);\n                }\n                //Make sure we return a JavaScript string and not a Java string.\n                content = String(stringBuffer.toString()); //String\n            } finally {\n                input.close();\n            }\n            callback(content);\n        };\n    } else if (masterConfig.env === 'xpconnect' || (!masterConfig.env &&\n            typeof Components !== 'undefined' && Components.classes &&\n            Components.interfaces)) {\n        //Avert your gaze!\n        Cc = Components.classes;\n        Ci = Components.interfaces;\n        Components.utils['import']('resource://gre/modules/FileUtils.jsm');\n        xpcIsWindows = ('@mozilla.org/windows-registry-key;1' in Cc);\n\n        text.get = function (url, callback) {\n            var inStream, convertStream, fileObj,\n                readData = {};\n\n            if (xpcIsWindows) {\n                url = url.replace(/\\//g, '\\\\');\n            }\n\n            fileObj = new FileUtils.File(url);\n\n            //XPCOM, you so crazy\n            try {\n                inStream = Cc['@mozilla.org/network/file-input-stream;1']\n                           .createInstance(Ci.nsIFileInputStream);\n                inStream.init(fileObj, 1, 0, false);\n\n                convertStream = Cc['@mozilla.org/intl/converter-input-stream;1']\n                                .createInstance(Ci.nsIConverterInputStream);\n                convertStream.init(inStream, \"utf-8\", inStream.available(),\n                Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER);\n\n                convertStream.readString(inStream.available(), readData);\n                convertStream.close();\n                inStream.close();\n                callback(readData.value);\n            } catch (e) {\n                throw new Error((fileObj && fileObj.path || '') + ': ' + e);\n            }\n        };\n    }\n    return text;\n});\n\n","\ndefine('text!templates/loading.html',[],function () { return '<style>\\n/**\\n * Loading page progress bars\\n * http://css-tricks.com/css3-progress-bars/\\n */\\n \\t.meter-wrapper{\\n \\t\\tposition: relative;\\n\\t\\ttop:50%;\\n \\t}\\n\\n\\t.meter {\\n\\t\\theight: 30px;  /* Can be anything */\\n\\t\\tposition: relative;\\n\\t\\tmargin-left: auto; margin-right: auto;\\n\\t\\tmargin-top:-15px;\\n\\t\\twidth:82%;\\n\\t\\tbackground: #555;\\n\\t\\t-moz-border-radius: 25px;\\n\\t\\t-webkit-border-radius: 25px;\\n\\t\\tborder-radius: 25px;\\n\\t\\tpadding: 10px;\\n\\t\\t-webkit-box-shadow: inset 0 -1px 1px rgba(255,255,255,0.3);\\n\\t\\t-moz-box-shadow   : inset 0 -1px 1px rgba(255,255,255,0.3);\\n\\t\\tbox-shadow        : inset 0 -1px 1px rgba(255,255,255,0.3);\\n\\t}\\n\\t.meter > span {\\n\\t\\tdisplay: block;\\n\\t\\theight: 100%;\\n\\t\\t   -webkit-border-top-right-radius: 8px;\\n\\t\\t-webkit-border-bottom-right-radius: 8px;\\n\\t\\t\\t   -moz-border-radius-topright: 8px;\\n\\t\\t\\t-moz-border-radius-bottomright: 8px;\\n\\t\\t\\t\\t   border-top-right-radius: 8px;\\n\\t\\t\\t\\tborder-bottom-right-radius: 8px;\\n\\t\\t\\t-webkit-border-top-left-radius: 20px;\\n\\t\\t -webkit-border-bottom-left-radius: 20px;\\n\\t\\t\\t\\t-moz-border-radius-topleft: 20px;\\n\\t\\t\\t -moz-border-radius-bottomleft: 20px;\\n\\t\\t\\t\\t\\tborder-top-left-radius: 20px;\\n\\t\\t\\t\\t border-bottom-left-radius: 20px;\\n\\t\\tbackground-color: rgb(43,194,83);\\n\\t\\tbackground-image: -webkit-gradient(\\n\\t\\t  linear,\\n\\t\\t  left bottom,\\n\\t\\t  left top,\\n\\t\\t  color-stop(0, rgb(43,194,83)),\\n\\t\\t  color-stop(1, rgb(84,240,84))\\n\\t\\t );\\n\\t\\tbackground-image: -moz-linear-gradient(\\n\\t\\t  center bottom,\\n\\t\\t  rgb(43,194,83) 37%,\\n\\t\\t  rgb(84,240,84) 69%\\n\\t\\t );\\n\\t\\t-webkit-box-shadow:\\n\\t\\t  inset 0 2px 9px  rgba(255,255,255,0.3),\\n\\t\\t  inset 0 -2px 6px rgba(0,0,0,0.4);\\n\\t\\t-moz-box-shadow:\\n\\t\\t  inset 0 2px 9px  rgba(255,255,255,0.3),\\n\\t\\t  inset 0 -2px 6px rgba(0,0,0,0.4);\\n\\t\\tbox-shadow:\\n\\t\\t  inset 0 2px 9px  rgba(255,255,255,0.3),\\n\\t\\t  inset 0 -2px 6px rgba(0,0,0,0.4);\\n\\t\\tposition: relative;\\n\\t\\toverflow: hidden;\\n\\t}\\n\\t.meter > span:after, .animate > span > span {\\n\\t\\tcontent: \"\";\\n\\t\\tposition: absolute;\\n\\t\\ttop: 0; left: 0; bottom: 0; right: 0;\\n\\t\\tbackground-image:\\n\\t\\t   -webkit-gradient(linear, 0 0, 100% 100%,\\n\\t\\t\\t  color-stop(.25, rgba(255, 255, 255, .2)),\\n\\t\\t\\t  color-stop(.25, transparent), color-stop(.5, transparent),\\n\\t\\t\\t  color-stop(.5, rgba(255, 255, 255, .2)),\\n\\t\\t\\t  color-stop(.75, rgba(255, 255, 255, .2)),\\n\\t\\t\\t  color-stop(.75, transparent), to(transparent)\\n\\t\\t   );\\n\\t\\tbackground-image:\\n\\t\\t\\t-moz-linear-gradient(\\n\\t\\t\\t  -45deg,\\n\\t\\t\\t  rgba(255, 255, 255, .2) 25%,\\n\\t\\t\\t  transparent 25%,\\n\\t\\t\\t  transparent 50%,\\n\\t\\t\\t  rgba(255, 255, 255, .2) 50%,\\n\\t\\t\\t  rgba(255, 255, 255, .2) 75%,\\n\\t\\t\\t  transparent 75%,\\n\\t\\t\\t  transparent\\n\\t\\t   );\\n\\t\\tz-index: 1;\\n\\t\\t-webkit-background-size: 50px 50px;\\n\\t\\t-moz-background-size: 50px 50px;\\n\\t\\t-webkit-animation: move 2s linear infinite;\\n\\t\\t   -webkit-border-top-right-radius: 8px;\\n\\t\\t-webkit-border-bottom-right-radius: 8px;\\n\\t\\t\\t   -moz-border-radius-topright: 8px;\\n\\t\\t\\t-moz-border-radius-bottomright: 8px;\\n\\t\\t\\t\\t   border-top-right-radius: 8px;\\n\\t\\t\\t\\tborder-bottom-right-radius: 8px;\\n\\t\\t\\t-webkit-border-top-left-radius: 20px;\\n\\t\\t -webkit-border-bottom-left-radius: 20px;\\n\\t\\t\\t\\t-moz-border-radius-topleft: 20px;\\n\\t\\t\\t -moz-border-radius-bottomleft: 20px;\\n\\t\\t\\t\\t\\tborder-top-left-radius: 20px;\\n\\t\\t\\t\\t border-bottom-left-radius: 20px;\\n\\t\\toverflow: hidden;\\n\\t}\\n\\n\\t.animate > span:after {\\n\\t\\tdisplay: none;\\n\\t}\\n\\n\\t@-webkit-keyframes move {\\n\\t\\t0% {\\n\\t\\t   background-position: 0 0;\\n\\t\\t}\\n\\t\\t100% {\\n\\t\\t   background-position: 50px 50px;\\n\\t\\t}\\n\\t}\\n\\n\\t.orange > span {\\n\\t\\tbackground-color: #f1a165;\\n\\t\\tbackground-image: -moz-linear-gradient(top, #f1a165, #f36d0a);\\n\\t\\tbackground-image: -webkit-gradient(linear,left top,left bottom,color-stop(0, #f1a165),color-stop(1, #f36d0a));\\n\\t\\tbackground-image: -webkit-linear-gradient(#f1a165, #f36d0a);\\n\\t}\\n\\n\\t.red > span {\\n\\t\\tbackground-color: #f0a3a3;\\n\\t\\tbackground-image: -moz-linear-gradient(top, #f0a3a3, #f42323);\\n\\t\\tbackground-image: -webkit-gradient(linear,left top,left bottom,color-stop(0, #f0a3a3),color-stop(1, #f42323));\\n\\t\\tbackground-image: -webkit-linear-gradient(#f0a3a3, #f42323);\\n\\t}\\n\\n\\t.nostripes > span > span, .nostripes > span:after {\\n\\t\\t-webkit-animation: none;\\n\\t\\tbackground-image: none;\\n\\t}\\n</style>\\n\\n<div class=\"meter-wrapper\">\\n\\t<div class=\"meter\">\\n\\t\\t<span style=\"width: 0%\"></span>\\n\\t</div>\\n</div>';});\n\n","/*\n * The main view, responsible for managing the canvas\n */\ndefine('app/task/main_view',['require','backbone','jquery','underscore','./adjust_canvas','./canvasConstructor','app/task/script','text!templates/loading.html'],function(require){\n\n\tvar Backbone = require('backbone')\n\t\t, $ = require('jquery')\n\t\t, _ = require('underscore')\n\t\t, adjust_canvas = require('./adjust_canvas')\n\t\t, canvas = require('./canvasConstructor')\n\t\t,script = require('app/task/script')\n\t\t,loadingTpl = require('text!templates/loading.html');\n\n\n\tvar View = Backbone.View.extend({\n\n\t\tid: 'canvas',\n\n\t\tinitialize: function(){\n\t\t\t_.bindAll(this, ['activate','render','destroy']);\n\n\t\t\tthis.deferred = $.Deferred();\n\t\t\tthis.deferred.promise().always(this.destroy);\n\n\t\t\t$(window).on('orientationchange.pip resize.pip', $.proxy(this.adjustCanvas,this));\n\t\t},\n\n\t\trender: function(){\n\t\t\tthis.adjustCanvas(true);\n\t\t\treturn this;\n\t\t},\n\n\t\tactivate: function(){\n\t\t\tvar self = this;\n\t\t\tvar canvasSettings = script().settings.canvas || {};\n\t\t\tvar docReady = $.Deferred(); // document ready deferred, so we can continue only after activation has culminated\n\n\t\t\t$(document).ready(function(){\n\n\t\t\t\tvar map = {\n\t\t\t\t\tbackground \t\t\t: {element: $('body'), property: 'backgroundColor'},\n\t\t\t\t\tcanvasBackground\t: {element: self.$el, property:'backgroundColor'},\n\t\t\t\t\tborderColor\t\t\t: {element: self.$el, property:'borderColor'},\n\t\t\t\t\tborderWidth\t\t\t: {element: self.$el, property:'borderWidth'}\n\t\t\t\t};\n\n\t\t\t\t// settings activator\n\t\t\t\tvar off = canvas(map, _.pick(canvasSettings,['background','canvasBackground','borderColor','borderWidth']));\n\t\t\t\tself.deferred.promise().always(off);\n\n\t\t\t\tcanvasSettings.css && self.$el.css(canvasSettings.css);\n\n\t\t\t\t// append to body and render\n\t\t\t\tif ($('[pi-player]').length){\n\t\t\t\t\t$('[pi-player]').empty().append(self.$el);\n\t\t\t\t} else {\n\t\t\t\t\tself.$el.appendTo('body');\n\t\t\t\t}\n\n\t\t\t\tself.render();\n\t\t\t\tdocReady.resolve();\n\t\t\t});\n\n\t\t\treturn docReady;\n\t\t},\n\n\t\t// display loading page\n\t\tloading: function(parseDef){\n\t\t\tvar $bar;\n\n\t\t\t// if loading has already finished lets skip the loading page\n\t\t\tif (parseDef.state() != \"pending\"){\n\t\t\t\treturn parseDef;\n\t\t\t}\n\n\t\t\t// display the loading template\n\t\t\tthis.$el.html(loadingTpl);\n\n\t\t\t$bar = this.$('.meter span');\n\n\t\t\treturn parseDef\n\t\t\t\t.progress(function(done, remaining){\n\t\t\t\t\t// update progress bar\n\t\t\t\t\t$bar.width((remaining ? (done/remaining)*100 : 0) + '%');\n\t\t\t\t});\n\t\t},\n\n\t\tempty: function(){\n\t\t\tthis.$el.empty();\n\t\t},\n\n\t\tdestroy: function(){\n\t\t\t$(window).off('.pip');\n\t\t\tthis.remove();\n\t\t\tthis.unbind();\n\t\t},\n\n\t\t// sets canvas size (used also for refreshing upon orientation change)\n\t\tadjustCanvas: adjust_canvas\n\t});\n\n\t// Returns the View class\n\treturn new View();\n});\n","define('models/set',[\"backbone\",\"underscore\"], function(Backbone, _) {\n\n\tvar Model = Backbone.Collection.extend({\n\t\t// holds a list of the next members to call if we're using the exclusive randomisation\n\t\torderList: [],\n\t\t// the next pick for the bySequence function\n\t\tnextPick: 0,\n\n\t\t// similar to the collection function where, only searches the data attribute\n\t\twhereData: function(attrs) {\n\t\t\tif (_.isEmpty(attrs)) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\treturn this.filter(function(model) {\n\t\t\t\tvar data = model.get('data') || {};\n\t\t\t\tfor (var key in attrs) {\n\t\t\t\t\tif (attrs[key] !== data[key]){\n                        return false;\n                    }\n\t\t\t\t}\n                return true;\n\t\t\t});\n\t\t},\n\n\t\t// plain randomization\n\t\trandom: function(){\n\t\t\treturn this.at(Math.floor(Math.random()*this.length)).attributes;\n\t\t},\n\n\t\t// randomize without repeat\n\t\texRandom: function(){\n\t\t\tthis.orderList = this.orderList.length ? this.orderList : _.shuffle(_.range(this.length));\n\t\t\treturn this.at(this.orderList.pop()).attributes;\n\t\t},\n\n\t\tbySequence: function(){\n\t\t\t// reset the nextPick pointer if needed\n\t\t\tthis.nextPick < this.length || (this.nextPick = 0);\n\t\t\treturn this.at(this.nextPick++).attributes;\n\t\t},\n\n\t\t// find model by data attributes\n\t\t// check if all attributes of the handle appear in the model data\n\t\t// if the handle is not an abject compare to data.handle\n\t\tbyData: function(definitions){\n\t\t\tif (_.isUndefined(definitions.data)) {\n\t\t\t\tconsole.log(definitions);\n\t\t\t\tthrow new Error(\"A data property must by defined for byData\");\n\t\t\t}\n\n\t\t\t// if a the data property is a string, assume its a handle\n\t\t\tvar data =  _.isString(definitions.data) ? {handle:definitions.data} : definitions.data;\n\n\t\t\t// get the first element that fits the handle\n\t\t\tvar element = this.whereData(data)[0];\n\t\t\tif (!element) {\n                throw new Error('Inherit by Data failed. Data not found: ' + definitions.data);\n            }\n\t\t\treturn\telement.attributes;\n\t\t},\n\n\t\tgetInherited: function(definitions){\n\t\t\t// if this is a function, return it with the set as \"this\"\n\t\t\tif (_.isFunction(definitions.type)) {\n                return definitions.type.call(this,definitions);\n            }\n\n\t\t\t// otherwise call the appropriate built in function\n\t\t\tswitch (definitions.type) {\n\t\t\t\tcase 'bySequence' : return this.bySequence();\n\t\t\t\tcase 'byData' : return this.byData(definitions);\n\t\t\t\tcase 'exRandom' : return this.exRandom();\n\t\t\t\tcase 'random' :\n                    /* falls through */\n\t\t\t\tdefault:\n\t\t\t\t\treturn this.random();\n\t\t\t}\n\t\t},\n\n\t\tinherit: function(definitions){\n\t\t\tif (!this.length){\n\t\t\t\tthrow new Error('You attempted to inherit from an empty set ({' + this.name + '})');\n\t\t\t}\n\n\t\t\tvar result = this.getInherited(definitions);\n\n\t\t\tif (!result){\n\t\t\t\tthrow new Error('You tried to inherit from {' + this.name + '} but an appropriate element was not found');\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t});\n\n\t// Returns the Model class\n\treturn Model;\n});\n","/*\n * returns a constructor for sets\n *\n * the constructur returns a function that can optionaly be used to create new sets: function sets(setData)\n *\n * and returns the set stack:\n *\n * {\n *\t\tsetName: [component,component,component]\n *\t\tsetName: [component,component,component]\n * }\n *\n */\ndefine('app/sets_constructor',['underscore','models/set'],function(_,Set){\n\t// the constructor\n\tfunction Set_constructor(){\n\t\t// the (private) set stack\n\t\tvar setStack = {};\n\n\t\t// setter function (optionaly adds sets, returns the set stack)\n\t\t// this is the interface to this object\n\t\tfunction sets(setArr){\n\t\t\t_.each(setArr,function(value,key){\n\t\t\t\tsetStack[key] = new Set(value);\n\t\t\t\tsetStack[key].name = key;\n\t\t\t});\n\n\t\t\treturn setStack;\n\t\t}\n\n\t\t// return the setter function\n\t\treturn sets;\n\t}\n\n\treturn Set_constructor;\n});\n\n","/*\n * The trial sets objects.\n * (see documentation in the constructor)\n */\ndefine('app/trial/trial_sets',['../sets_constructor'],function(Sets){\n\treturn new Sets();\n});\n\n","/*\n * The stimulus sets objects.\n * (see documentation in the constructor)\n */\ndefine('app/stimulus/stimulus_sets',['../sets_constructor'],function(Sets){\n\treturn new Sets();\n});\n\n","/*\n * The media sets objects.\n * (see documentation in the constructor)\n */\ndefine('app/media/media_sets',['../sets_constructor'],function(Sets){\n\treturn new Sets();\n});\n\n","define('models/collection',['underscore'],function(_){\n\t/*\n\t * The constructor for an Array wrapper\n\t */\n\n\tvar Collection = function Collection () {\n\t\tthis.collection = [];\n\n\t\t// pointer to the current location within the array\n\t\t// we start with -1 so that the initial next points to the begining of the array\n\t\tthis.pointer = -1;\n\n\n\t};\n\n\t_.extend(Collection.prototype,{\n\n\t\tfirst : function first(){\n\t\t\tthis.pointer = 0;\n\t\t\treturn this.collection[this.pointer];\n\t\t},\n\n\t\tlast : function last(){\n\t\t\tthis.pointer = this.collection.length - 1;\n\t\t\treturn this.collection[this.pointer];\n\t\t},\n\n\t\tend : function end(){\n\t\t\tthis.pointer = this.collection.length;\n\t\t\treturn undefined;\n\t\t},\n\n\t\tcurrent : function(){\n\t\t\treturn this.collection[this.pointer];\n\t\t},\n\n\t\tnext : function(){\n\t\t\treturn this.collection[++this.pointer];\n\t\t},\n\n\t\tprevious : function(){\n\t\t\treturn this.collection[--this.pointer];\n\t\t},\n\n\t\t// add list of items to the collection\n\t\tadd : function(list){\n\t\t\t// dont allow adding nothing\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\t// make sure list is as an array\n\t\t\tlist = _.isArray(list) ? list : [list];\n\t\t\tthis.collection = this.collection.concat(list);\n\n\t\t\treturn this;\n\t\t},\n\n\t\t// return the item at index\n\t\tat: function(index){\n\t\t\treturn this.collection[index];\n\t\t}\n\t});\n\n\treturn Collection;\n});\n","define('app/sequencer/sourceSequence',['models/collection','underscore'],function(Collection,_){\n\tvar collection = new Collection();\n\n\tvar hasFit = function compare(data, properties){\n\n\t\t// if the data does not have one of the properties - this is not a fit\n\t\tfor (var prop in properties){\n\t\t\tif (properties[prop] !== data[prop]){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t// by default this is a fit\n\t\treturn true;\n\t};\n\n\t// extend the collection with goto functions\n\t_.extend(collection,{\n\t\tnextWhere: function nextWhere(properties){\n\t\t\twhile (this.next()) {\n\t\t\t\t// if we find a fit break out of the loop\n\t\t\t\tif (hasFit(this.current().data || {}, properties)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this.current();\n\t\t},\n\n\t\tlastWhere: function lastWhere(properties){\n\t\t\twhile (this.previous()) {\n\t\t\t\t// if we find a fit break out of the loop\n\t\t\t\tif (hasFit(this.current().data || {}, properties)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this.current();\n\t\t}\n\t});\n\n\treturn collection;\n});\n\n","define('utils/mixer',['underscore'],function(_){\n\n\t/*\n\t * mixes an array according to mix objects\n\t *\n\t * The basic structure of such an obect is:\n\t * {\n\t *\t\tmixer: 'functionType',\n\t *\t\tdata: [task1, task2]\n\t *\t}\n\t *\n\t * @param list - the array to be mixed\n\t * @param shallow - for inner use only: mix without opening wrappers. this allows us to open randoms and repeats\n\t */\n\tvar mix = function(list,shallow){\n\t\tvar stack = [];\n\n\t\t_.each(list, function(value){\n\t\t\tvar mixer = _.isObject(value) ? value.mixer : undefined;\n\t\t\tvar mixed, result, i;\n\n\t\t\t// if the value is wrapped in a mixer object we want to extract it and push it into the stack\n\t\t\tswitch (mixer){\n\t\t\t\tcase 'random' :\n\t\t\t\t\tmixed = _.shuffle(mix(value.data,true));\n\t\t\t\t\tresult = shallow ? mixed : mix(mixed);\t\t// if this is top level lets open all those wrappers now\n\t\t\t\t\tstack = stack.concat(result);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'weightedRandom':\n\t\t\t\t\tvar total_weight = _.reduce(value.weights,function (prev, cur) {\n\t\t\t\t\t\treturn prev + cur;\n\t\t\t\t\t});\n\n\t\t\t\t\tvar random_num = Math.random() * total_weight; // cutoff - when we reach this sum - we've reached the desired weight\n\t\t\t\t\tvar weight_sum = 0;\n\n\t\t\t\t\tfor (i = 0; i < value.data.length; i++) {\n\t\t\t\t\t\tweight_sum += value.weights[i];\n\t\t\t\t\t\tweight_sum = +weight_sum.toFixed(3);\n\n\t\t\t\t\t\tif (random_num <= weight_sum) {\n\t\t\t\t\t\t\tmixed = [value.data[i]];\n\t\t\t\t\t\t\tbreak; //break out of the loop\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tresult = shallow ? mixed : mix(mixed);\t\t// if this is top level lets open all those wrappers now\n\t\t\t\t\tstack = stack.concat(result);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'choose' :\n\t\t\t\t\tmixed = _.chain(value.data)\n\t\t\t\t\t\t.shuffle()\t\t\t\t\t\t\t\t// first lets shuffle data so that the choice is random\n\t\t\t\t\t\t.first(value.n ? value.n : 1)\t\t\t// then we choose the first n items\n\t\t\t\t\t\t.value();\t\t\t\t\t\t\t\t// finaly lets get out of the chain\n\t\t\t\t\tresult = shallow ? mixed : mix(mixed);\t\t// if this is top level lets open all those wrappers now\n\t\t\t\t\tstack = stack.concat(result);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'repeat' :\n\t\t\t\t\tmixed = mix(value.data,true);\n\t\t\t\t\tfor (i = 0; i < value.times; i++) {\n\t\t\t\t\t\tresult = shallow ? mixed : mix(mixed);\t\t// if this is top level lets open all those wrappers now\n\t\t\t\t\t\tstack = stack.concat(result);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'wrapper' :\n\t\t\t\t\t// if this is a shallow mix, don't mix the wrapper yet\n\t\t\t\t\tif (shallow) {\n\t\t\t\t\t\tstack.push(value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstack = stack.concat(mix(value.data));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase undefined:\n\t\t\t\t\t// the value is unwrapped, lets push it as it is.\n\t\t\t\t\tstack.push(value);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Unknown wrapper ' + mixer);\n\t\t\t}\n\t\t});\n\n\t\treturn stack;\n\t};\n\n\treturn mix;\n});\n","/*\n * media preloader\n */\ndefine('utils/preloader',['jquery'], function($){\n\tvar srcStack = [];\t\t\t\t// an array holding all our sources\n\tvar defStack = [];\t\t\t\t// an array holding all the deferreds\n\tvar stackDone = 0;\t\t\t\t// the number of sources we have completed downloading\n\tvar allDone = $.Deferred();\t\t// General deferred, notifies upon source completion\n\tvar images = {};\n\n\t// load a single source\n\tfunction load(src, type){\n\t\ttype = type || 'image';\n\t\t// if we haven't loaded this yet\n\t\tif ($.inArray(src, srcStack) == -1) {\n\t\t\tvar deferred = $.Deferred();\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'template':\n\t\t\t\t\trequire(['text!' + src], function(){\n\t\t\t\t\t\tdeferred.resolve();\n\t\t\t\t\t}, function(){\n\t\t\t\t\t\tthrow new Error('Template not found: ' + src);\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'image':\n\t\t\t\t\t/* falls through */\n\t\t\t\tdefault :\n\t\t\t\t\tvar img = new Image();\t// create img object\n\t\t\t\t\t$(img).on('load',function(){deferred.resolve();}); // resolve deferred on load\n\t\t\t\t\t$(img).one('error',function(){\n\t\t\t\t\t\timg.src = \"\";\n\t\t\t\t\t\timg.src = src;\n\t\t\t\t\t\t$(img).on('error', function(){throw new Error('Image not found: \"' + src + '\"');});\n\t\t\t\t\t}); // reject deferred on error\n\t\t\t\t\timg.src = src;\n\t\t\t\t\timages[src] = img;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// keep defered and source for later.\n\t\t\tdefStack.push(deferred);\n\t\t\tsrcStack.push(src);\n\n\t\t\t// count this defered as done\n\t\t\tdeferred\n\t\t\t\t.done(function(){\n\t\t\t\t\t// increment the completed counter\n\t\t\t\t\tstackDone++;\n\t\t\t\t\t// notify allDone that we advanced another step\n\t\t\t\t\tallDone.notify(stackDone,defStack.length);\n\t\t\t\t});\n\n\t\t\treturn deferred;\n\t\t}\n\t\t// the source was already loaded\n\t\treturn false;\n\t}\n\n\treturn {\n\t\t// loads a single source\n\t\tadd: load,\n\n\t\tgetImage: function(url){\n\t\t\treturn images[url];\n\t\t},\n\n\t\tactivate: function(){\n\t\t\t// fail or reject allDone according to our defStack\n\t\t\t$.when.apply($,defStack)\n\t\t\t\t.done(function(){allDone.resolve();})\n\t\t\t\t.fail(function(){allDone.reject();});\n\n\t\t\treturn allDone.promise();\n\t\t},\n\n\t\t// reset globals so we can reuse this object\n\t\treset: function(){\n\t\t\tsrcStack = [];\n\t\t\tdefStack = [];\n\t\t\tstackDone = 0;\n\t\t\tallDone = this.state = $.Deferred();\n\t\t},\n\n\t\t// returns a deferred describing the state of this preload\n\t\tstate: allDone\n\t};\n\n});\n","define('app/task/build_url',['underscore','./settings'],function(_,settingsGetter){\n\t/*\n\t * build the url for this src (add the generic base_url)\n\t */\n\n\treturn function(url, type){\n\t\tvar settings = settingsGetter();\n\t\tvar base_url;\n\n\t\t// the base url setting may be either a string, or an object with the type as a field\n\t\tif (_.isString(settings.base_url)) {\n\t\t\tbase_url = settings.base_url;\n\t\t} else {\n\t\t\tif (_.isObject(settings.base_url)) {\n\t\t\t\tbase_url = settings.base_url[type];\n\t\t\t}\n\t\t}\n\n\t\t// it this is a dataUrl type of image, we don't need to append the baseurl\n\t\tif (type == 'image' && /^data:image/.test(url)){\n\t\t\treturn url;\n\t\t}\n\n\t\t// make sure base url is set, and add trailing slash if needed\n\t\tif (!base_url) {\n\t\t\tbase_url=\"\";\n\t\t} else {\n\t\t\tif (base_url[base_url.length-1] != \"/\") {\n\t\t\t\tbase_url+=\"/\";\n\t\t\t}\n\t\t}\n\n\t\treturn base_url + url;\n\t};\n});\n\n","/*\n * gets all media that needs preloading and preloads it\n */\ndefine('app/sequencer/sequencePreload',['underscore','utils/preloader','app/task/build_url'],function(_,preload,build_url){\n\n\tvar loadMedia = function(media){\n\t\t// if this is an image, preload it\n\t\tif (!_.isUndefined(media.image)) {\n\t\t\tpreload.add(build_url(media.image, 'image'),'image');\n\t\t}\n\t\tif (!_.isUndefined(media.template)) {\n\t\t\tpreload.add(build_url(media.template,'template'),'template');\n\t\t}\n\t};\n\n\tvar loadStimulus = function(stimulus) {\n\t\tif (stimulus.media) {\n\t\t\tloadMedia(stimulus.media);\n\t\t}\n\t};\n\n\tvar loadInput = function(input){\n\t\tif (input.element) {\n\t\t\tloadMedia(input.element);\n\t\t}\n\t};\n\n\tvar loadTrial = function(trial){\n\t\t_.each(trial.layout || [], loadStimulus);\n\t\t_.each(trial.stimuli || [], loadStimulus);\n\t\t_.each(trial.input || [], loadInput);\n\t};\n\n\t// load trials in sequence (essentialy, recursively pick out the trials out of the mixer)\n\tvar loadSequence = function(sequence){\n\t\t_.each(sequence,function(element){\n\t\t\tif (!_.isUndefined(element.mixer)) {\n\t\t\t\tloadSequence(element.data);\n\t\t\t} else {\n\t\t\t\tloadTrial(element);\n\t\t\t}\n\t\t});\n\t};\n\n\tvar loadScript = function(script){\n\t\t// load media sets\n\t\t_.each(script.mediaSets || [], function(set){\n\t\t\t_.each(set,loadMedia);\n\t\t});\n\n\t\t// load stimsets\n\t\t_.each(script.stimulusSets || [], function(set){\n\t\t\t_.each(set,loadStimulus);\n\t\t});\n\n\t\t// load trialsets\n\t\t_.each(script.trialSets || [], function(set){\n\t\t\t_.each(set,loadTrial);\n\t\t});\n\n\t\tloadSequence(script.sequence);\n\t}; // load script\n\n\t// accepts a piece of script and a type\n\t// @param script: a piece of script\n\t// @param type: what sort of object this is (media/stimulus/trial)\n\t// @param reset: should we reset the preloader before activating it (use if for some reason we lost the cache...)\n\t// @returns a deferred object\n\treturn function(script, type, reset){\n\t\tif (reset) {\n\t\t\tpreload.reset();\n\t\t}\n\n\t\tswitch (type){\n\t\t\tcase 'media'\t: loadMedia(script); break;\n\t\t\tcase 'stimulus'\t: loadStimulus(script); break;\n\t\t\tcase 'trial'\t: loadTrial(script); break;\n\t\t\tcase 'script'\t:\n\t\t\t\t/* falls through */\n\t\t\tdefault:\n\t\t\t\tloadScript(script); break;\n\t\t}\n\t\treturn preload.activate();\n\t};\n});\n","/*\n * this file is resposible for taking the experiment script (json) and parsing it\n */\n\ndefine('app/task/parser',['require','app/task/script','../trial/trial_sets','../stimulus/stimulus_sets','../media/media_sets','../sequencer/sourceSequence','utils/mixer','../sequencer/sequencePreload'],function(require){\n\t// load dependancies\n\tvar scriptGetter = require('app/task/script');\n\tvar trialSets = require('../trial/trial_sets');\n\tvar stimulusSets = require('../stimulus/stimulus_sets');\n\tvar mediaSets = require('../media/media_sets');\n\tvar sequence = require('../sequencer/sourceSequence');\n\tvar mix = require('utils/mixer');\n\tvar preload = require('../sequencer/sequencePreload');\n\n\treturn function(){\n\t\tvar script = scriptGetter();\n\n\t\t// load component sets\n\t\tif (script.trialSets) {\n\t\t\ttrialSets(script.trialSets);\n\t\t}\n\t\tif (script.stimulusSets) {\n\t\t\tstimulusSets(script.stimulusSets);\n\t\t}\n\t\tif (script.mediaSets) {\n\t\t\tmediaSets(script.mediaSets);\n\t\t}\n\n\t\t// load sequence\n\t\tsequence.add(mix(script.sequence));\n\n\t\t// preload and return deferred\n\t\treturn preload(script);\n\t};\n});\n\n","define('app/sequencer/trialSequence',['models/collection'],function(Collection){\n\treturn new Collection();\n});\n\n","define('utils/pubsub',[\"underscore\"],function(_){\n\n\t// the pubsub object itself\n\tvar pubsub = {};\n\n\t// the topic/subscription hash\n\tvar cache = {};\n\tvar counters ={};\n\n\tpubsub.publish = function(/* String */topic, /* Array? */args){\n\t\t// summary:\n\t\t//\t\tPublish some data on a named topic.\n\t\t// topic: String\n\t\t//\t\tThe channel to publish on\n\t\t// args: Array?\n\t\t//\t\tThe data to publish. Each array item is converted into an ordered\n\t\t//\t\targuments on the subscribed functions.\n\t\t//\n\t\t// example:\n\t\t//\t\tPublish stuff on '/some/topic'. Anything subscribed will be called\n\t\t//\t\twith a function signature like: function(a,b,c){ ... }\n\t\t//\n\t\t//\t|\t\t$.publish(\"/some/topic\", [\"a\",\"b\",\"c\"]);\n\t\t// log(topic,args);\n\n\t\tcache[topic] && _.each(cache[topic], function(func){\n\t\t\tfunc.apply(pubsub, args || []);\n\t\t});\n\n\t};\n\n\tpubsub.subscribe = function(/* String */topic, /* Function */callback){\n\t\t// summary:\n\t\t//\t\tRegister a callback on a named topic.\n\t\t// topic: String\n\t\t//\t\tThe channel to subscribe to\n\t\t// subStack: Array\n\t\t//\t\tOptional, an array to which we push the subscription handle\n\t\t// callback: Function\n\t\t//\t\tThe handler event. Anytime something is $.publish'ed on a\n\t\t//\t\tsubscribed channel, the callback will be called with the\n\t\t//\t\tpublished array as ordered arguments.\n\t\t//\n\t\t// returns: Array\n\t\t//\t\tA handle which can be used to unsubscribe this particular subscription.\n\t\t//\n\t\t// example:\n\t\t//\t|\t$.subscribe(\"/some/topic\", function(a, b, c){ /* handle data */ });\n\t\t//\n\t\t// example:\n\t\t//\t|\t$.subscribe(\"/some/topic\", \"/handle/stack\", function(a, b, c){ /* handle data */ });\n\n\t\tvar subStack;\n\n\t\t// if second argument is not a call back use it as the subscription stack\n\t\tif (_.isFunction(callback)) {\n\t\t\tsubStack = [];\n\t\t} else {\n\t\t\tsubStack = arguments[1];\n\t\t\tcallback = arguments[2];\n\t\t}\n\n\t\tif(!cache[topic]){\n\t\t\tcache[topic] = {};\n\t\t\tcounters[topic] = 0;\n\t\t}\n\n\t\tcache[topic][counters[topic]++] = callback;\n\n\t\tsubStack.push([topic, callback]);\n\t\treturn [topic, callback]; // Array\n\t};\n\n\tpubsub.unsubscribe = function(/* Array */handle){\n\t\t// summary:\n\t\t//\t\tDisconnect a subscribed function for a topic.\n\t\t// handle: Array\n\t\t//\t\tThe return value from a $.subscribe call.\n\t\t// example:\n\t\t//\t|\tvar handle = $.subscribe(\"/something\", function(){});\n\t\t//\t|\t$.unsubscribe(handle);\n\n\t\tvar t = handle[0];\n\t\tcache[t] && _.each(cache[t], function(func, idx){\n\t\t\tfunc == handle[1] && delete(cache[t][idx]);\n\t\t});\n\t};\n\n\treturn pubsub;\n});\n\n\n\n\n\n","/*\n * detects touch devices\n */\n\ndefine('utils/is_touch',[],function(){\n\treturn !!('ontouchstart' in window) ? true : false;\n});\n\n","define('utils/interface/bindings/click',['jquery','utils/is_touch'],function($,is_touch_device){\n\n\t/*\n\t * takes care of click events\n\t *\n\t * accepts a listener object to decorate and definitions\n\t *\n\t * the function accepts either\n\t *\t\ta stimulus handle to which to bind the event (definitions.stimHandle)\n\t *\t\tor an element to add to the canvas definitions.element (optionaly a jquery css object may be added: definitions.css)\n\t *\n\t * -- if we want to attach the event to an existing element\n\t * definitions = {\n\t *\t\tstimHandle: 'firstStim'\n\t * }\n\t * This attaches to the [data-handle=\"firstStim\"] stimulus.\n\t *\n\t * -- if we want to create a interface specific element\n\t * definitions = {\n\t *\t\telement: $('<div>'),\n\t *\t\tcss: {background:red; 'font-size': 2em'}   // optional\n\t * }\n\t */\n\n\treturn function(listener,definitions){\n\t\tvar eventName = is_touch_device ? 'touchstart' : 'mousedown';\n\n\t\tvar existingElement = definitions.element ? false : true;\t// does this click refer to an existing element?\n\t\tvar $element = $(definitions.element);\t\t\t\t\t\t// @todo: may be overwritten for multiple elements. rewrite as closure.\n\n\t\tlistener.on = function(callback){\n\t\t\tvar activateCallback = function(e){ callback(e,eventName); };\n\n\t\t\t// If we're binding to an existing element, bind to its appropriate handle\n\t\t\tif (existingElement){\n\t\t\t\t$(document).on(eventName + '.interface','[data-handle=\"'+definitions.stimHandle + '\"]', activateCallback);\n\t\t\t} else {\n\t\t\t\t// the element to attach\n\t\t\t\t$element\n\t\t\t\t\t.css(definitions.css || {})\n\t\t\t\t\t.appendTo('#canvas')\t\t\t\t\t\t\t// @todo, not great form, we should probably have a variable pointing there...\n\t\t\t\t\t.on(eventName+'.interface',activateCallback);\n\t\t\t}\n\t\t};\n\n\t\tlistener.off = function(){\n\t\t\tif (existingElement){\n\t\t\t\t$(document).off(eventName + '.interface','[data-handle=\"'+definitions.stimHandle + '\"]');\n\t\t\t} else {\n\t\t\t\t$element.remove();\t\t\t\t\t\t\t\t\t// this also removes any attached events\n\t\t\t}\n\t\t};\n\t};\n});\n","define('utils/interface/bindings/keypressed',['jquery'],function($){\n\n\t/*\n\t * key pressed listener\n\t * reqires key\n\t *\n\t * key can be either charCode or string.\n\t * or an array of charCode/strings.\n\t */\n\n\t// we monitor all key up events so that we trigger only once per key down\n\tvar keyDownArr = [];\n\t$(document).on(\"keyup.keypressed\",function(e){\n\t\tkeyDownArr[e.which] = false; // unset flag to prevent multi pressing of a key\n\t});\n\n\t// creates an object that is capable of activating a keypressed event and removing it\n\tvar Keypressed = function(definitions){\n\t\t// make sure key is array\n\t\tvar key = $.isArray(definitions.key) ? definitions.key : [definitions.key];\n\t\tvar eventName = \"keydown.interface.\" + definitions.handle;\n\n\t\t// accept both keyCode and the key itself\n\t\tvar target = $.map(key,function(value){\n\t\t\treturn typeof value == \"string\" ? value.toUpperCase().charCodeAt(0) : value;\n\t\t});\n\n\t\t// attach listener\n\t\tthis.on = function(callback){\n\t\t\t$(document).on(eventName,function(e){\n\t\t\t\tif (!keyDownArr[e.which] && $.inArray(e.which,target) != -1) {\n\t\t\t\t\tkeyDownArr[e.which] = true; // set flag to prevent multi pressing of a key\n\t\t\t\t\tcallback(e,'keydown');\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// remove listener\n\t\tthis.off = function(){\n\t\t\t$(document).off(eventName);\n\t\t};\n\n\t};\n\n\treturn function(listener,definitions){\n\t\t// decorate listener with new keypressed\n\t\t$.extend(listener,new Keypressed(definitions));\n\t};\n\n});\n","define('utils/interface/bindings/keyup',['jquery'],function($){\n\n\t/*\n\t * key up listener\n\t * reqires definitions.key\n\t *\n\t * key can be either charCode or string.\n\t * or an array of charCode/strings.\n\t */\n\n\t// creates an object that is capable of activating a keypressed event and removing it\n\tvar Keyup = function(definitions){\n\t\t// make sure key is array\n\t\tvar key = $.isArray(definitions.key) ? definitions.key : [definitions.key];\n\t\tvar eventName = \"keyup.interface.\" + definitions.handle;\n\n\t\t// accept both keyCode and the key itself\n\t\tvar target = $.map(key,function(value){\n\t\t\treturn typeof value == \"string\" ? value.toUpperCase().charCodeAt(0) : value;\n\t\t});\n\n\t\t// attach listener\n\t\tthis.on = function(callback){\n\t\t\t$(document).on(eventName,function(e){\n\t\t\t\tif ($.inArray(e.which,target) !== -1) {\n\t\t\t\t\tcallback(e,'keyup');\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// remove listener\n\t\tthis.off = function(){\n\t\t\t$(document).off(eventName);\n\t\t};\n\n\t};\n\n\treturn function(listener,definitions){\n\t\t// decorate listener with new keypressed\n\t\t$.extend(listener,new Keyup(definitions));\n\t};\n\n});\n","define('utils/timeout',[\"underscore\"],function(_){\n\n\t/*\n\t * timeout\n\t *\n\t * timeout(time,callback): shortcut for setTimeout\n\t * timeout(time,stack,callback): shortcut for setTimeout, sets timer_id into stack array\n\t *\n\t * @todo: poll timer instead of using one long timeout\n\t * http://ejohn.org/blog/accuracy-of-javascript-time/\n\t * http://stackoverflow.com/questions/196027/is-there-a-more-accurate-way-to-create-a-javascript-timer-than-settimeout\n\t * http://www.sitepoint.com/creating-accurate-timers-in-javascript/\n\t * http://stackoverflow.com/questions/6875625/does-javascript-provide-a-high-resolution-timer/6875666#6875666\n\t * http://www.websanova.com/blog/javascript/how-to-write-an-accurate-game-timer-in-javascript#.UmZ1PHh4uak\n\t */\n\n\treturn function timeout(){\n\t\tvar time = arguments[0];\n\t\tvar stack = _.isArray(arguments[1]) ? arguments[1] : [];\n\t\tvar callback = _.isFunction(arguments[1]) ? arguments[1] : arguments[2];\n\t\tvar timer_id = 0;\n\n\t\tif (!time) {\n\t\t\tcallback.call();\n\t\t} else {\n\t\t\ttimer_id = setTimeout(callback,time);\n\t\t\tstack.push(timer_id);\n\t\t}\n\n\t\treturn timer_id;\n\t};\n\n});\n\n","/**\n *\tTakes a properties objects and returns the result of a randomization:\n *\tIf it is an array - pick a random member\n *\tIf it is an object pick from within a range\n *\tIf it is a function return its result using the context\n *\tOtherwise simply return the properties\n */\ndefine('utils/simpleRandomize',['underscore'],function(_){\n\n\tvar randomize = function simpleRandomize(properties, context){\n\n\t\tif (_.isArray(properties)) {\n\t\t\tvar index = Math.floor(Math.random()*properties.length);\n\t\t\treturn properties[index];\n\t\t}\n\n\t\tif (_.isFunction(properties)) {\n\t\t\treturn properties.call(context);\n\t\t}\n\n\t\t// this must be after the test for arrays and functions, because they are considered objects too\n\t\tif (_.isObject(properties)) {\n\t\t\tif (!_.isNumber(properties.min) || !_.isNumber(properties.max) || properties.min > properties.max) {\n\t\t\t\tthrow new Error('randomization objects need both a max and a minimum property, also max has to be larger than min');\n\t\t\t}\n\t\t\treturn properties.min + (properties.max - properties.min) * Math.random();\n\t\t}\n\n\t\t// if this is not a randomization object simply return\n\t\treturn properties;\n\t};\n\n\treturn randomize;\n});\n","define('utils/interface/bindings/timeout',['utils/timeout','utils/simpleRandomize'],function(timeout, randomize){\n\n\t/*\n\t * timeout listenter\n\t *\n\t * requires definitions.duration, otherwise fires immediately\n\t */\n\n\treturn function(listener, definitions){\n\n\t\t// all this has to happen in a seperate module (closure) so that the different timers don't overide one anather\n\t\tvar Timeout = (function(){\n\n\t\t\tvar duration = randomize(definitions.duration) || 0;\n\t\t\tvar timerID;\n\n\t\t\treturn {\n\t\t\t\ton : function(callback){\n\t\t\t\t\ttimerID = timeout(duration,function(){\n\t\t\t\t\t\tcallback({},'timeout');\n\t\t\t\t\t});\n\t\t\t\t},\n\n\t\t\t\toff : function(){\n\t\t\t\t\tclearTimeout(timerID);\n\t\t\t\t}\n\t\t\t};\n\t\t})();\n\n\t\tlistener.on = Timeout.on;\n\t\tlistener.off = Timeout.off;\n\t};\n});\n","define('utils/interface/binder',['jquery','./bindings/click', './bindings/keypressed', './bindings/keyup','./bindings/timeout'], function($,click, keypressed,keyup, timeout){\n\t/*\n\t * this function decorates a listener object with on and off functions\n\t * it takes listener (the object) and the binding definitions as parameters\n\t *\n\t * the function returns true in case the decoration was successfull and false in case it was not.\n\t */\n\treturn function(listener,definitions){\n\t\tvar on = definitions.on; // what type of binding is this?\n\n\t\t// if the on and off function are set explicitly, set them in;\n\t\tif (typeof on === 'function') {\n\t\t\tlistener.on = definitions.on;\n\t\t\tlistener.off = definitions.off;\n\t\t\tif (typeof listener.off !== 'function') {\n\t\t\t\tthrow new Error(\"Interface off is not a function for \" + definitions.handle);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tswitch (on){\n\t\t\t/*\n\t\t\t * the archtipical events\n\t\t\t */\n\t\t\tcase 'keypressed'\t:\n\t\t\t\tkeypressed(listener, definitions);\n\t\t\t\tbreak;\n\n\t\t\tcase 'keyup'\t\t:\n\t\t\t\tkeyup(listener, definitions);\n\t\t\t\tbreak;\n\n\t\t\tcase 'click'\t\t:\n\t\t\t\tclick(listener,definitions);\n\t\t\t\tbreak;\n\n\t\t\tcase 'timeout'\t\t:\n\t\t\t\ttimeout(listener,definitions);\n\t\t\t\tbreak;\n\n\t\t\t/*\n\t\t\t * Shortcuts\n\t\t\t */\n\n\t\t\tcase 'enter'\t:\n\t\t\t\tkeypressed(listener, $.extend({key:13},definitions));\n\t\t\t\tbreak;\n\n\t\t\tcase 'space'\t:\n\t\t\t\tkeypressed(listener, $.extend({key:32},definitions));\n\t\t\t\tbreak;\n\n\t\t\tcase 'esc'\t:\n\t\t\t\tkeypressed(listener, $.extend({key:27},definitions));\n\t\t\t\tbreak;\n\n\t\t\tcase 'leftTouch'\t:\n\t\t\t\tdefinitions.element = $('<div>')\n\t\t\t\t\t.css({\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\twidth: '30%',\n\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\tbackground: '#00FF00',\n\t\t\t\t\t\topacity: 0.3\n\t\t\t\t\t});\n\n\t\t\t\tclick(listener,definitions);\n\t\t\t\tbreak;\n\n\t\t\tcase 'rightTouch'\t:\n\t\t\t\tdefinitions.element = $('<div>')\n\t\t\t\t\t.css({\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\twidth: '30%',\n\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\tbackground: '#00FF00',\n\t\t\t\t\t\topacity: 0.3\n\t\t\t\t\t});\n\n\t\t\t\tclick(listener,definitions);\n\t\t\t\tbreak;\n\n\t\t\tcase 'topTouch'\t:\n\t\t\t\tdefinitions.element = $('<div>')\n\t\t\t\t\t.css({\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\theight: '30%',\n\t\t\t\t\t\tbackground: '#00FF00',\n\t\t\t\t\t\topacity: 0.3\n\t\t\t\t\t});\n\n\t\t\t\tclick(listener,definitions);\n\t\t\t\tbreak;\n\n\t\t\tcase 'bottomTouch'\t:\n\t\t\t\tdefinitions.element = $('<div>')\n\t\t\t\t\t.css({\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\tbottom: 0,\n\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\theight: '30%',\n\t\t\t\t\t\tbackground: '#00FF00',\n\t\t\t\t\t\topacity: 0.3\n\t\t\t\t\t});\n\n\t\t\t\tclick(listener,definitions);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error('You have an input element without a recognized \"on\" property: ' + on);\n\n\t\t}\n\t\treturn true;\n\t};\n});\n","define('utils/interface/triggerEvent',['utils/pubsub'],function(pubsub){\n\t/*\n\t * manages publishing the event\n\t */\n\treturn function triggerEvent(event,type,definitions, latency){\n\n\t\tvar data = {\n\t\t\ttimestamp\t: +new Date(),\n\t\t\tlatency\t\t: latency,\n\t\t\thandle\t\t: definitions.handle,\t\t\t// right/left and so on\n\t\t\ttype\t\t: type,\t\t\t\t\t\t\t// holds click/keypressed and so on\n\t\t\te\t\t\t: event\t\t\t\t\t\t\t// the original event if available. just in case\n\t\t};\n\n\t\tpubsub.publish(\"input\",[data]);\n\t};\n\n});\n\n","define('utils/interface/listener',['./binder','./triggerEvent'],function(binder,trigger){\n\n\t/*\n\t * listener constructor\n\t */\n\treturn function Listener(definitions, interfaceObj){\n\n\t\t// set listener handle\n\t\tthis.handle = definitions.handle;\n\n\t\t// decorate listener with on and off functions\n\t\tbinder(this,definitions);\n\n\t\t// activate listener:\n\t\tthis.on(function(e,type){\n\t\t\ttrigger(e,type,definitions, interfaceObj.getLatency());\n\t\t});\n\n\t\t// for now the destroyer simply unbinds the event\n\t\tthis.destroy = this.off;\n\t};\n\n});\n\n","/* global performance */\ndefine('utils/now',[],function(){\n\n\tvar nowFn;\n\n\t// if performance is set, look for the now function\n\n\tif (!!window.performance) {\n\t\tnowFn = performance.now  ||\n        performance.mozNow    ||\n        performance.webkitNow ||\n        performance.msNow     ||\n        performance.oNow;\n\t}\n\n\t// if we have now proxy it (so it uses perfomance as \"this\")\n\t// otherwise use regular date/time\n\treturn nowFn ?\n\t\tfunction now(){return nowFn.apply(performance);}\n\t\t: function now(){ return +new Date();};\n\n});\n\n","define('utils/interface/interface',['jquery','./listener', '../is_touch','../now'],function($,Listener,is_touch_device,now){\n\n\t/*\n\t * adds and removes listeners from the stack\n\t *\n\t * function add(definitions): add listener, see ./binder.js for more details and options\n\t *\n\t * definitions = {\n\t *\t\thandle: 'listener name',\n\t *\t\ton: listener type (click, keypressed, various shortcuts)\n\t * }\n\t *\n\t */\n\n\tvar listenerStack = [] // holds all active listeners\n\t\t, baseTime = 0;\n\n\treturn {\n\t\t// get latency (time since last reset)\n\t\tgetLatency: function(){\n\t\t\treturn now() - baseTime;\n\t\t},\n\n\t\t// reset timer\n\t\tresetTimer: function(){\n\t\t\tbaseTime = now();\n\t\t},\n\n\t\t// add listeners\n\t\tadd: function(definitions){\n\t\t\tif (!definitions){\n\t\t\t\tthrow new Error('Missing input element. Could not add input listener');\n\t\t\t}\n\n\t\t\tvar interfaceObj = this;\n\t\t\t// make sure definitions is set as an array\n\t\t\tvar definitionsArr = $.isArray(definitions) ? definitions : [definitions];\n\n\t\t\t// for each definitions object create a listener\n\t\t\t$.each(definitionsArr,function(key,definition){\n\t\t\t\t// if this listener is targeted specificaly at a touch\\!touch device\n\t\t\t\tif (typeof definition.touch != 'undefined') {\n\t\t\t\t\t// if needed, skip this listener\n\t\t\t\t\tif (is_touch_device && !definition.touch) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!is_touch_device && definition.touch) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar listener = new Listener(definition, interfaceObj);\n\t\t\t\tlistenerStack.push(listener);\n\t\t\t});\n\n\t\t},\n\n\t\t// remove listeners\n\t\tremove: function(handleList){\n\t\t\thandleList = $.isArray(handleList ) ? handleList  : [handleList ];\n\n\t\t\t// go through the listener stack and remove any listeners that fit the handle list\n\t\t\t// note that we do this in reverse so that the index does not change\n\t\t\tfor (var i = listenerStack.length - 1; i >= 0 ; i--){\n\t\t\t\tvar listener = listenerStack[i];\n\n\t\t\t\tif ($.inArray(listener.handle, handleList) != -1){\n\t\t\t\t\tlistener.off();\n\t\t\t\t\tlistenerStack.splice(i,1);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// remove all listeners\n\t\tdestroy: function(){\n\n\t\t\t// destroy each listener\n\t\t\tfor (var i in listenerStack){\n\t\t\t\tlistenerStack[i].destroy();\n\t\t\t}\n\t\t\t// empty stack\n\t\t\tlistenerStack = [];\n\t\t}\n\t};\n});\n","define('models/model',[\"backbone\",\"underscore\"], function(Backbone, _) {\n\n\t// ***********  prototypal inheritance  ***********\n\t// use example: newObject = Object.create(oldObject);\n\t// @todo: do we realy need this?\n\tif (typeof Object.create !== 'function') {\n\t\tObject.create = function (o) {\n\t\t\tfunction F() {}\n\t\t\tF.prototype = o;\n\t\t\treturn new F();\n\t\t};\n\t}\n\n\n\tvar Model = Backbone.Model.extend({\n\n\t\tconstructor : function ( attributes, options ) {\n\t\t\tvar new_attributes = {};\n\n\t\t\t// clone attributes so that we prototipicaly inherit objects\n\t\t\t_.each(attributes, function(value, key){\n\n\t\t\t\tif (_.isObject(value)) {\n\t\t\t\t\t// inherit object\n\t\t\t\t\tvar child = Object.create(value);\n\n\t\t\t\t\t// default to the default properties of the model\n\t\t\t\t\tvar defaultObj = this.defaults && this.defaults[key] && _.isObject(this.defaults[key]) ? this.defaults[key] : {};\n\t\t\t\t\tnew_attributes[key] = _.defaults(child, defaultObj);\n\t\t\t\t} else {\n\t\t\t\t\tnew_attributes[key] = value;\n\t\t\t\t}\n\t\t\t},this);\n\n\t\t\t// Note that __super__ is not part of the documented API, but\n\t\t\t// it seems to me that a lot of actual Backbone behavior is not\n\t\t\t// documented, and since __super__ is there, so far I've been\n\t\t\t// using it instead of setting my own property to store the\n\t\t\t// reference to the parent class.\n\n\t\t\tBackbone.Model.apply(this, [new_attributes, options]);\n\n\t\t}\n\n\t});\n\n\t// Returns the Model class\n\treturn Model;\n});\n","/*\n * the media view\n *\n */\n\ndefine('app/media/media_view',['jquery', 'backbone','app/task/main_view'], function($, Backbone,main_view){\n\n    var canvas = main_view.$el;\n\n    var View = Backbone.View.extend({\n\n        // build element according to simulus\n        initialize: function(options){\n            this.options = options || {}; // needed since backbone v1.1.0\n\n            this.$el\n                .addClass('stimulus')\n                .attr('data-handle', this.model.handle)     // add data-handle for handeling of mouse/touch interactions\n                .css(\"visibility\", \"hidden\")\n                .css(this.model.get('css'))\n                .appendTo(canvas);\n\n            this.render();\n        },\n\n        // we keep all stimuli appended to the canvas so that the render function can apply to them\n        // they shouldn't affect each other because they have absolute positioning\n        // we hide and show them using visibility\n\n        render: function(){\n            // these are the things that need recalibrating on refresh\n            this.size();\n            this.place();\n            return this;\n        },\n\n        show: function(){\n            // if this is a gif, reload it before displaying so that the gif is reset\n            if (this.options.type === 'image' && this.options.image.indexOf('gif') !== -1){\n                // weird IE bug that prevents refreshing gifs...\n\t\t\t\t// also, on IE11 you can't refresh a gif when it is not visibility:visible\n                if(window.ActiveXObject || \"ActiveXObject\" in window){ // true only in IE\n                    this.$el.css(\"visibility\", \"visible\");\n\t\t\t\t\tthis.$el[0].src =  this.options.image + '#' + Math.random();\n                } else {\n                    // Firefox requires to explicitly empty the \"src\" before resetting it.\n                    this.$el[0].src = \"\";\n                    this.$el[0].src = this.options.image;\n\t\t\t\t\tthis.$el.css(\"visibility\", \"visible\");\n                }\n\n\t\t\t\treturn this;\n            }\n\n            this.$el.css(\"visibility\", \"visible\");\n            return this;\n        },\n\n        hide: function(){\n            this.$el.css(\"visibility\", \"hidden\");\n            return this;\n        },\n\n        size: function(){\n            var size = this.model.get('size');\n\n            if (size.font_size){\n                this.$el.css('font-size', size.font_size);\n            }\n            // if this is a word, we don't want to set height (it breaks centering)\n            if (size.height != 'auto' && this.options.type != 'word') {\n                this.$el.height(size.height + '%');\n            }\n            if (size.width != 'auto'){\n                this.$el.width(size.width + '%');\n            }\n\n            return this;\n        },\n\n        // places the element on the canvas (has to be called after size)\n        // @TODO: this is way too complex to be left here, we should probably export this to a seperate file or something\n        place: function(){\n            // helper function: returns sizes of element;\n            function size($elem){\n                return {\n                    height    : $elem.outerHeight(),\n                    width    : $elem.outerWidth()\n                };\n            }\n\n            var top, bottom, left, right; // will hold the offset for the locations\n            var canvasSize = size(canvas);\n            var elSize = size(this.$el);\n            // get location setting and set center as default\n            var location = this.model.get('location') || {};\n            if (typeof location.top == 'undefined' && typeof location.bottom == 'undefined') {\n                location.top = 'center';\n            }\n            if (typeof location.left == 'undefined' && typeof location.right == 'undefined') {\n                location.right = 'center';\n            }\n\n            // set offsets:\n            switch (location.top){\n                case undefined :\n                    /* falls through */\n                case 'auto'     : top = 'auto'; break;\n                case 'center'    : top = (canvasSize.height - elSize.height)/2; break;\n                default            : top = (canvasSize.height * location.top)/100;\n            }\n\n            switch (location.bottom){\n                case undefined :\n                    /* falls through */\n                case 'auto'     : bottom = 'auto'; break;\n                case 'center'    : bottom = (canvasSize.height - elSize.height)/2; break;\n                default            : bottom = (canvasSize.height * (location.bottom))/100;\n            }\n\n            switch (location.left){\n                case undefined :\n                    /* falls through */\n                case 'auto'     : left = 'auto'; break;\n                case 'center'    : left = (canvasSize.width - elSize.width)/2; break;\n                default            : left = (canvasSize.width * location.left)/100;\n            }\n\n            switch (location.right){\n                case undefined :\n                    /* falls through */\n                case 'auto'     : right = 'auto'; break;\n                case 'center'    : right = (canvasSize.width - elSize.width)/2; break;\n                default            : right = (canvasSize.width * (location.right))/100;\n            }\n\n            this.$el.css({\n                top     : top,\n                bottom    : bottom,\n                left     : left,\n                right     : right\n            });\n        }\n\n    });\n\n    // Returns the View Constructor\n    return View;\n});\n\n","define('app/global',['require','underscore'],function(require){\n\n\t// initiate piGloabl\n\twindow.piGlobal || (window.piGlobal = {});\n\n\tvar _ = require('underscore');\n\tvar glob = window.piGlobal;\n\n\n\t/**\n\t * getter setter for the global object\n\t * @param  {Object} obj     The object to add to the global\n\t * @param  {Bool} \treplace A new object to fully replace the old global\n\t * @return {Object}         The full global\n\t */\n\tfunction global(obj, replace){\n\n\t\tif (replace) {\n\t\t\tglob = obj;\n\t\t\treturn glob;\n\t\t}\n\n\t\tif (_.isPlainObject(obj)){\n\t\t\t_.each(function(value, key){\n\t\t\t\tconsole.warn && global[key] && console.warn('Overwriting \"' + key  + '\" in global object.');\n\t\t\t});\n\t\t\t_.merge(glob, obj);\n\t\t}\n\n\t\treturn glob;\n\t}\n\n\treturn global;\n});\n","/*\n * inflates a trial/stimulus/media\n * this function is responsible for inheritance from the sets\n *\n * function inflate(source,type)\n * where source is the script for a component, and type is the type of component (trial/stimulus/media)\n *\n * the function returns an inflated script object (to be parsed by the constuctors)\n */\ndefine('app/inflator',['jquery','./trial/trial_sets','./stimulus/stimulus_sets','./media/media_sets', './global'],function($,trialSets,stimulusSets,mediaSets, global){\n\n\tvar customize = function customize(source){\n\t\t// check for a custom function and run it if it exists\n\t\tif (typeof source.customize === 'function'){\n\t\t\tsource.customize.apply(source, [source, global()]);\n\t\t\t// remove customize function so that it gets called only once (don't delete because - performance)\n\t\t\t//source.customize = null;\n\t\t}\n\t\treturn source;\n\t};\n\n\t// @param source - object to inflate\n\t// @param type - trial stimulus or media\n\t// @param recursive - whether this is a recursive call or not\n\tvar inflate = function(source,type, recursive){\n\n\t\tvar sets\n\t\t\t, inherit\n\t\t\t, parent\n\t\t\t, child;\n\n\t\tswitch (type) {\n\t\t\tcase 'trial': sets = trialSets(); break;\n\t\t\tcase 'stimulus': sets = stimulusSets(); break;\n\t\t\tcase 'media': sets = mediaSets(); break;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unknown set type ' + type);\n\t\t}\n\n\t\t// if we do not need to inherit anything, simply return source\n\t\tif (!source.inherit) {\n\t\t\t!recursive && customize(source);\n\t\t\treturn source;\n\t\t}\n\n\t\t//if the inherit object is not an abject then it is probably a string and refers to a vanila set\n\t\tinherit = $.isPlainObject(source.inherit) ? source.inherit : {set:source.inherit};\n\n\t\t// make sure we know the set we're inheriting from\n\t\tif (!sets[inherit.set]) {\n\t\t\tthrow new Error('Unknown '+ type +'Set: ' + inherit.set);\n\t\t}\n\n\t\t// get parent (recursively)\n\t\tparent = inflate(sets[inherit.set].inherit(inherit),type, true);\n\n\t\t// create inflated child\n\t\tchild = $.extend(true,{},source);\n\n\t\t$.each(parent, function(key, value){\n\t\t\t// if this key is not set yet, copy it out of the parent (choose the copy method according to the type of data)\n\t\t\tif (!child[key]){\n\t\t\t\t// arrays\n\t\t\t\tif ($.isArray(parent[key])){\n\t\t\t\t\tchild[key] = $.extend(true, [], value);\n\t\t\t\t}\n\t\t\t\t// objects\n\t\t\t\telse if (typeof parent[key] === 'object'){\n\t\t\t\t\tchild[key] = $.extend(true, {}, value);\n\t\t\t\t}\n\t\t\t\t// primitives\n\t\t\t\telse {\n\t\t\t\t\tchild[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// we want to extend the childs data even if it already exists\n\t\tif (parent.data){\n\t\t\tchild.data = $.extend(true, {}, parent.data, child.data);\n\t\t}\n\n\t\t// Personal customization functions - only if this is the last iteration of inflate\n\t\t// This way the customize function gets called only once.\n\t\t!recursive && customize(child);\n\n\t\t// return inflated trial\n\t\treturn child;\n\t};\n\n\treturn inflate;\n});\n","/*\n * a function that takes a media object and creates appropriate html for it\n *\n * html(media, context)\n *\t\ttakes a media object such as {word: 'Morning'} (we do our best for the object to have only one property)\n *\t\tthe context is the object used for templating\n */\ndefine('utils/html',['jquery','underscore', 'utils/preloader'],function($,_, preload){\n\n\tvar html = function(media, context){\n\n\t\tif (media.word) {\n\t\t\tmedia.displayType = 'element';\n\t\t\tmedia.type = 'word';\n\t\t\tmedia.el = $('<div>',{text:media.word});\n\t\t}\n\t\telse if (media.image) {\n\t\t\tmedia.displayType = 'element';\n\t\t\tmedia.type = 'image';\n\t\t\tmedia.el = preload.getImage(media.image);\n\t\t}\n\t\telse if (media.jquery) {\n\t\t\tmedia.displayType = 'element';\n\t\t\tmedia.type = 'jquery';\n\t\t\tmedia.el = media.jquery;\n\t\t}\n\t\telse if (media.html) {\n\t\t\tmedia.displayType = 'element';\n\t\t\tmedia.type = 'html';\n\t\t\tmedia.el = $(_.template(media.html,context || {}));\n\t\t}\n\t\telse if (media.template) {\n\t\t\t// the template should be already loaded through the preloading module - we load it synchronously here.\n\t\t\t// see https://github.com/jrburke/requirejs/wiki/Upgrading-to-RequireJS-2.1#enforcing-async-require-\n\t\t\tvar template = require('text!' + media.template);\n\n\t\t\tmedia.displayType = 'element';\n\t\t\tmedia.type = 'html';\n\t\t\ttry {\n\t\t\t\tmedia.el = $(_.template(template,context || {}));\n\t\t\t} catch(e){\n\t\t\t\tthrow new Error('Templates must be wrapped in an html element such as <span></span>. ' + media.inlineTemplate + ' is invalid');\n\t\t\t}\n\t\t}\n\t\telse if (media.inlineTemplate) {\n\t\t\tmedia.displayType = 'element';\n\t\t\tmedia.type = 'html';\n\t\t\ttry {\n\t\t\t\tmedia.el = $(_.template(media.inlineTemplate,context || {}));\n\t\t\t} catch(e){\n\t\t\t\tthrow new Error('Templates must be wrapped in an html element such as <span></span>. ' + media.inlineTemplate + ' is invalid');\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\treturn false; // this is not a supported html type\n\t\t}\n\t};\n\n\treturn html;\n\n});\n\n","define('app/media/media_constructor',['jquery', './media_view','../inflator','utils/html','app/task/build_url','app/global'], function($, Media,inflate,html,build_url,global) {\n\n\treturn function(mediaObject,model){\n\n\t\tif (typeof mediaObject == 'string'){\n\t\t\tmediaObject = {word:mediaObject};\n\t\t}\n\n\t\t// make sure we have a media object\n\t\tif (!mediaObject){\n\t\t\tthrow new Error('Media object not defined for ' + model.name());\n\t\t}\n\n\t\t// inflate the definitions\n\t\t// note that the base url is added to the media object during the sequence preload\n\t\tvar definitions = inflate(mediaObject,'media');\n\n\t\t// if needed, build url\n\t\tif (definitions.template) {\n\t\t\tdefinitions.template = build_url(definitions.template,'template');\n\t\t}\n\t\tif (definitions.image){\n\t\t\tdefinitions.image = build_url(definitions.image,'image');\n\t\t}\n\n\t\t// keep the source\n\t\tdefinitions.source = $.extend({},definitions);\n\t\t// keep a reference to the model\n\t\tdefinitions.model = model;\n\n\t\thtml(definitions,{\n\t\t\tglobal: global(),\n\t\t\ttrialData: model.trial.data,\n\t\t\tstimulusData: model.get('data')\n\t\t});\n\n\t\t// return a new media view\n\t\treturn new Media(definitions);\n\t};\n});\n\n\n","define('app/stimulus/stimulus_model',['require','models/model','app/media/media_constructor','utils/pubsub','underscore','utils/is_touch','app/task/settings'],function(require) {\n\tvar MyModel = require(\"models/model\")\n\t\t,MediaView = require(\"app/media/media_constructor\")\n\t\t,pubsub = require(\"utils/pubsub\")\n\t\t,_ = require(\"underscore\")\n\t\t,is_touch = require(\"utils/is_touch\")\n\t\t,settings = require(\"app/task/settings\");\n\n\n\tvar Model = MyModel.extend({\n\t\tinitialize: function(){\n\t\t\t// set trial in the model\n\t\t\tif (this.collection.trial) {\n\t\t\t\tthis.trial = this.collection.trial;\n\t\t\t}\n\n\t\t\t// set model handle\n\t\t\tthis.attributes.data = this.attributes.data || {}; // make sure we have a data object\n\t\t\tthis.attributes.data.handle = this.attributes.data.handle || this.attributes.handle; // set the handle in the data object\n\t\t\tthis.handle =  this.attributes.data.handle; // set the handle in the stimulus object\n\n\t\t\t// pick the correct media according to if this is a touch device\n\t\t\tvar mediaSource = is_touch && this.get('touchMedia') ? this.get('touchMedia') : this.get('media');\n\t\t\t// take the media source and inflate it into a full fledged view\n\t\t\tthis.media = new MediaView(mediaSource,this);\n\n\t\t},\n\n\t\t// Default values for all of the attributes\n\t\tdefaults: {\n\t\t\tsize: {height: 'auto', width: 'auto'},\n\t\t\tcss:{}\n\t\t},\n\n\n\t\t// activate stimulus listeners (maybe these shoud sit in one of the trial modules? call with apply)\n\t\t// ----------------------------------------------------------------------------------------------------------\n\n\t\tactivate: function(){\n\t\t\tvar self = this;\n\t\t\tvar stimHandle = this.handle;\n\t\t\tthis.timeStack = this.timeStack || [];\n\t\t\tthis.pubsubStack = this.pubsubStack || [];\n\n\t\t\t// subscribe to start action\n\t\t\t// -------------------------\n\t\t\tpubsub.subscribe('stim:start', self.pubsubStack, function(handle){\n\t\t\t\tif (!_.include([stimHandle,'All'], handle)) {\n\t\t\t\t\t// make sure this publication is aimed at us\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// present the stimulus\n\t\t\t\tself.media.show();\n\t\t\t});\n\n\t\t\t// subscribe to set attribute action\n\t\t\t// ---------------------------------\n\n\t\t\tpubsub.subscribe('stim:setAttr', self.pubsubStack, function(handle,setter){\n\t\t\t\tif (!_.include([stimHandle,'All'], handle)) {\n\t\t\t\t\t// make sure this publication is aimed at us\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// if this is a function let it do whatever it wants with this model, otherwise simply call set.\n\t\t\t\tif (_.isFunction(setter)) {\n\t\t\t\t\tsetter.apply(self);\n\t\t\t\t} else {\n\t\t\t\t\tvar data = self.get('data') || {};\n\t\t\t\t\tdata = _.extend(data, setter);\n\t\t\t\t\tself.set('data', data);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// subscribe to stop stimulus action\n\t\t\t// ---------------------------------\n\t\t\tpubsub.subscribe('stim:stop', self.pubsubStack, function(handle){\n\t\t\t\tif (!_.include([stimHandle,'All'], handle)) {\n\t\t\t\t\t// make sure this publication is aimed at us\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// hide the stimulus\n\t\t\t\tself.media.hide();\n\t\t\t});\n\t\t},\n\n\t\tdisable: function(){\n\t\t\t// hide the stimulus\n\t\t\tthis.media.hide();\n\n\t\t\t// make sure the stacks exist\n\t\t\tthis.timeStack = this.timeStack || [];\n\t\t\tthis.pubsubStack = this.pubsubStack || [];\n\n\t\t\t_.each(this.pubsubStack, function(handle) {\n\t\t\t\tpubsub.unsubscribe(handle);\n\t\t\t});\n\n\t\t\t// empty stacks\n\t\t\tthis.timeStack = [];\n\t\t\tthis.pubsubStack = [];\n\t\t},\n\n\t\tname: function(){\n\t\t\tvar attr = this.attributes;\n\t\t\tif (attr.data.alias) {return attr.data.alias;} // if we have an alias ues it\n\t\t\tif (attr.inherit && attr.inherit.set) {return attr.inherit.set;} // otherwise try using the set we inherited from\n\t\t\tif (attr.handle) {return attr.handle;} // otherwise use handle\n\t\t\treturn false; // we're out of options here\n\t\t},\n\n\t\tmediaName: function(){\n\t\t\tvar media = this.media.options.source;\n\t\t\tvar fullpath = settings.logger && settings.logger.fullpath; // should we use the full path or just the file name\n\n\t\t\tif (media.alias) {return media.alias;} // if we have an alias ues it\n\t\t\tfor (var prop in media) {\n\t\t\t\tif (prop != 'inherit') {\n\t\t\t\t\tif (_.contains(['image','template'],prop) && !fullpath) {\n                        return media[prop].replace(/^.*[\\\\\\/]/, '');\n\t\t\t\t\t} else {\n                        return media[prop];\n                    }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t});\n\n\t// Returns the Model class\n\treturn Model;\n\n});\n","define('app/stimulus/stimulus_constructor',['./stimulus_model', '../inflator'], function(Stim_model,inflate) {\n\n\treturn function Stimulus_constructor(modelData, options){\n\n\t\t// inflate trial source\n\t\tvar data = inflate(modelData,'stimulus');\n\t\t// keep source for later use\n\t\tdata.source = modelData;\n\n\t\treturn new Stim_model(data, options);\n\t};\n\n});\n","define('app/stimulus/stimulus_collection',['backbone','underscore','app/stimulus/stimulus_constructor'],function(Backbone,_,stimModel){\n\n\tvar Collection = Backbone.Collection.extend({\n\t\tmodel:stimModel,\n\n\t\tinitialize: function(models,options){\n\t\t\toptions || (options = {});\n\n\t\t\t// set trial in the collection\n\t\t\tthis.trial = options.trial;\n\t\t},\n\n\t\t// similar to the collection function where, only searches the data attribute\n\t\twhereData: function(attrs) {\n\n\t\t\tif (_.isEmpty(attrs)) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\treturn this.filter(function(model) {\n\t\t\t\tvar data = model.get('data') || {};\n\n\t\t\tfor (var key in attrs) {\n\t\t\t\tif (attrs[key] !== data[key]) {\n                    return false;\n                }\n\t\t\t}\n\t\t\treturn true;\n\t\t\t});\n\t\t},\n\n\t\tactivate: function(){\n\t\t\tthis.each(function(stimulus){\n\t\t\t\tstimulus.activate();\n\t\t\t});\n\t\t\treturn this;\n\t\t},\n\n\t\tdisable: function(){\n\t\t\tthis.each(function(stimulus){\n\t\t\t\tstimulus.disable();\n\t\t\t});\n\t\t\treturn this;\n\t\t},\n\n\t\tdisplay_all: function(){\n\t\t\tthis.each(function(stimulus){\n\t\t\t\tstimulus.media.show();\n\t\t\t});\n\t\t},\n\n\t\thide_all: function(){\n\t\t\tthis.each(function(stimulus){\n\t\t\t\tstimulus.media.hide();\n\t\t\t});\n\t\t},\n\n\t\trefresh: function(){\n\t\t\tthis.each(function(stimulus){\n\t\t\t\tstimulus.media.render();\n\t\t\t});\n\t\t},\n\n\t\tget_stimlist: function(){\n\t\t\treturn this\n\t\t\t\t.chain()\n\t\t\t\t.filter(function(stimulus){return !stimulus.get('nolog');})\n\t\t\t\t.map(function(stimulus,index){\n\t\t\t\t\treturn stimulus.name() || ('stim' + index);\n\t\t\t\t})\n\t\t\t\t.value();\n\t\t},\n\n\t\tget_medialist: function(){\n\t\t\treturn this\n\t\t\t\t.chain()\n\t\t\t\t.filter(function(stimulus){return !stimulus.get('nolog');})\n\t\t\t\t.map(function(stimulus,index){\n\t\t\t\t\treturn stimulus.mediaName() || ('media' + index);\n\t\t\t\t})\n\t\t\t\t.value();\n\t\t}\n\n\t});\n\n\t// Returns the Collection class\n\treturn Collection;\n\n});\n","define('app/trial/evaluate',['underscore','app/global','./current_trial'],function(_,globalGetter,current_trial){\n\t/*\n\t * gets a condition array (or a single condition) and evaluates it\n\t * returns true if all statements are true, false otherwise\n\t *\n\t * a single condition looks like this:\n\t *\n\t *\tcondition = {\n\t *\t\ttype : 'begin/inputEquals/inputEqualsTrial/inputEqualsStim/function',\n\t *\t\tvalue: 'right/trialAttribute/stimAttribute/customFunction',\n\t *\t\thandle: 'stim handle' (optional in case we're targeting a stimulus)\n\t *\t}\n\t *\n\t */\n\n\treturn function evaluate(conditions, inputData){\n\n\t\tvar global = globalGetter();\n\t\tvar trial = current_trial();\n\n\t\tif (!conditions){\n\t\t\tthrow new Error(\"There is an interaction without conditions!!\");\n\t\t}\n\n\t\t// make sure conditions is an array\n\t\tconditions = _.isArray(conditions) ? conditions : [conditions];\n\n\t\t// the internal event\n\t\tinputData = inputData || {};\n\n\t\t// assume condition is true\n\t\tvar isTrue = true;\n\n\t\t// if this is a begin event, make sure we only run conditions that have begin in them\n\t\tif (inputData.type == 'begin') {\n\t\t\t// check if this set of conditions has 'begin' in it\n\t\t\tvar has_begin = _.reduce(conditions, function(memo, row){return memo || row.type == 'begin';},false);\n\t\t\tif (!has_begin){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// try to refute the condition\n\t\t_.each(conditions,function(condition){\n\t\t\tvar searchObj, result;\n\t\t\tvar evaluation = true;\n\t\t\tswitch (condition.type){\n\t\t\t\tcase 'begin':\n\t\t\t\t\tif (inputData.type !== 'begin') {\n\t\t\t\t\t\tevaluation = false;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'inputEquals' :\n\t\t\t\t\t// make sure condition.value is an array\n\t\t\t\t\t_.isArray(condition.value) || (condition.value = [condition.value]);\n\n\t\t\t\t\tif (_.indexOf(condition.value,inputData.handle) === -1) {\n\t\t\t\t\t\tevaluation = false;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'inputEqualsTrial':\n\t\t\t\t\tif (inputData.handle !== trial.data[condition.property]) {\n\t\t\t\t\t\tevaluation = false;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'inputEqualsStim':\n\t\t\t\t\t// create search object\n\t\t\t\t\tsearchObj = {};\n\t\t\t\t\tif (condition.handle){\n\t\t\t\t\t\tsearchObj['handle'] = condition.handle;\n\t\t\t\t\t}\n\t\t\t\t\tsearchObj[condition.property] = inputData.handle;\n\n\t\t\t\t\t// are there stimuli answering this descriptions?\n\t\t\t\t\tresult = trial._stimulus_collection.whereData(searchObj);\n\t\t\t\t\tif (result.length === 0) {\n\t\t\t\t\t\tevaluation = false;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'inputEqualsGlobal':\n\t\t\t\t\tif (typeof condition.property == 'undefined'){\n\t\t\t\t\t\tthrow new Error('inputEqualsGlobal requires both \"property\" to be defined');\n\t\t\t\t\t}\n\t\t\t\t\tif (inputData.handle !== global[condition.property]){\n\t\t\t\t\t\tevaluation = false;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'trialEquals':\n\t\t\t\t\tif (typeof condition.property == 'undefined' || typeof condition.value == 'undefined'){\n\t\t\t\t\t\tthrow new Error('trialEquals requires both \"property\" and \"value\" to be defined');\n\t\t\t\t\t}\n\t\t\t\t\tif (condition.value !== trial.data[condition.property]){\n\t\t\t\t\t\tevaluation = false;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'globalEquals':\n\t\t\t\t\tif (typeof condition.property == 'undefined' || typeof condition.value == 'undefined'){\n\t\t\t\t\t\tthrow new Error('globalEquals requires both \"property\" and \"value\" to be defined');\n\t\t\t\t\t}\n\t\t\t\t\tif (condition.value !== global[condition.property]){\n\t\t\t\t\t\tevaluation = false;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'globalEqualsTrial':\n\t\t\t\t\tif (typeof condition.globalProp == 'undefined' || typeof condition.trialProp == 'undefined'){\n\t\t\t\t\t\tthrow new Error('globalEqualsTrial requires both \"globalProp\" and \"trialProp\" to be defined');\n\t\t\t\t\t}\n\t\t\t\t\tif (global[condition.globalProp] !== trial.data[condition.trialProp]) {\n\t\t\t\t\t\tevaluation = false;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'globalEqualsStim':\n\t\t\t\t\tif (typeof condition.globalProp == 'undefined' || typeof condition.stimProp == 'undefined'){\n\t\t\t\t\t\tthrow new Error('globalEqualsStim requires both \"globalProp\" and \"stimProp\" to be defined');\n\t\t\t\t\t}\n\n\t\t\t\t\t// create search object\n\t\t\t\t\tsearchObj = {};\n\t\t\t\t\tif (condition.handle){\n\t\t\t\t\t\tsearchObj['handle'] = condition.handle;\n\t\t\t\t\t}\n\t\t\t\t\tsearchObj[condition.stimProp] = global[condition.globalProp];\n\n\t\t\t\t\t// are there stimuli answering this descriptions?\n\t\t\t\t\tresult = trial._stimulus_collection.whereData(searchObj);\n\t\t\t\t\tif (result.length === 0) {\n\t\t\t\t\t\tevaluation = false;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'function' :\n\t\t\t\t\tif (!condition.value.apply(trial,[trial,inputData])) {\n\t\t\t\t\t\tevaluation = false;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Unknown condition type: ' + condition.type);\n\t\t\t}\n\n\t\t\tisTrue = isTrue && (condition.negate ? !evaluation : evaluation);\n\t\t});\n\n\t\treturn isTrue;\n\t};\n});\n","define('app/trial/action_list',['underscore',\"utils/pubsub\",\"utils/interface/interface\", 'app/global'],function(_,pubsub,input,global){\n\tvar actions = {\n\t\t/*\n\t\t * Stimulus actions\n\t\t *\n\t\t */\n\n\t\tshowStim: function(options){\n\t\t\tvar handle = options.handle || options;\n\t\t\tpubsub.publish('stim:start',[handle]);\n\t\t},\n\n\t\thideStim: function(options){\n\t\t\tvar handle = options.handle || options;\n\t\t\tpubsub.publish('stim:stop',[handle]);\n\t\t},\n\n\t\tsetStimAttr: function(options){\n\t\t\tvar handle = options.handle;\n\t\t\tvar setter = options.setter;\n\t\t\tpubsub.publish('stim:setAttr',[handle,setter]);\n\t\t},\n\n\t\t/*\n\t\t * Trial actions\n\t\t */\n\n\t\tsetTrialAttr: function(options, eventData){\n\t\t\tif (typeof options.setter == 'undefined') {\n\t\t\t\tthrow new Error('The setTrialAttr action requires a setter property');\n\t\t\t}\n\t\t\tpubsub.publish('trial:setAttr',[options.setter, eventData]);\n\t\t},\n\n\t\tsetInput: function(options){\n\t\t\tif (typeof options.input == 'undefined') {\n\t\t\t\tthrow new Error('The setInput action requires an input property');\n\t\t\t}\n\t\t\tpubsub.publish('trial:setInput',[options.input]);\n\t\t},\n\n\t\ttrigger: function(options){\n\t\t\tif (typeof options.handle == 'undefined') {\n\t\t\t\tthrow new Error('The trigger action requires a handle property');\n\t\t\t}\n\t\t\tpubsub.publish('trial:setInput',[{handle:options.handle,on:'timeout',duration:+options.duration || 0}]);\n\t\t},\n\n\t\tremoveInput: function(options){\n\t\t\tif (typeof options.handle == 'undefined') {\n\t\t\t\tthrow new Error('The removeInput action requires a handle property');\n\t\t\t}\n\t\t\tpubsub.publish('trial:removeInput',[options.handle]);\n\t\t},\n\n\t\t// we use es3 true to protect from trailing commas in IE7. Here jshint thinks goto is a reserved word.\n\t\t/* jshint es3:false */\n\t\tgoto: function(options){\n\t\t/* jshint es3:true */\n\n\t\t\tpubsub.publish('trial:goto',[options]);\n\t\t},\n\n\t\tendTrial: function(){\n\t\t\tpubsub.publish('trial:end');\n\t\t},\n\n\t\tresetTimer: function(options,eventData){\n\t\t\t// set current evenData to 0\n\t\t\teventData.latency = 0;\n\t\t\t// reset the global timer\n\t\t\tinput.resetTimer();\n\t\t},\n\n\t\t/*\n\t\t * Logger\n\t\t */\n\n\t\tlog: function(options,eventData){\n\t\t\tpubsub.publish('log',[options,eventData]);\n\t\t},\n\n\t\t/*\n\t\t * Misc\n\t\t */\n\n\t\tsetGlobalAttr: function(options){\n\t\t\tswitch (typeof options.setter){\n\t\t\t\tcase 'function':\n\t\t\t\t\toptions.setter.apply(null,[global(), options]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'object':\n\t\t\t\t\t_.extend(global(), options.setter);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('setGlobalAttr requires a \"setter\" property');\n\t\t\t}\n\n\n\t\t},\n\n\t\tcustom: function(options,eventData){\n\t\t\tif (typeof options.fn != 'function') {\n\t\t\t\tthrow new Error('The custom action requires a fn propery');\n\t\t\t}\n\t\t\toptions.fn.apply(null, [options,eventData,global()]);\n\t\t}\n\n\t};\n\n\treturn actions;\n});\n","define('app/trial/action',['jquery','./action_list'],function($,action_list){\n\t/*\n\t * accepts an array of actions (or a single action)\n\t * and applies them\n\t *\n\t * actions = [\n\t *\t\t{type:actionName,more:options},\n\t *\t\t{actionName:options}\n\t * ]\n\t * @param actions: single action object or array of action objects\n\t * @param eventData: eventData object\n\t * @returns Boolean continueActions: whether this action stops further action activations\n\t */\n\n\treturn function(actions,eventData){\n\t\t// marks whether this is the final action to take\n\t\tvar continueActions = true;\n\n\t\tif (!actions){\n\t\t\tthrow new Error(\"There is an interaction without actions!!\");\n\t\t}\n\t\tactions = $.isArray(actions) ? actions : [actions];\n\n\t\t$.each(actions,function(index,action){\n\t\t\tif (action_list[action.type]) {\n\t\t\t\t// currently the only reason to halt action activation is the endTrial command\n\t\t\t\tif (action.type === 'endTrial'){\n\t\t\t\t\tcontinueActions = false;\n\t\t\t\t}\n\t\t\t\taction_list[action.type](action, eventData);\n\t\t\t} else {\n\t\t\t\tthrow new Error('unknown action: ' + action.type);\n\t\t\t}\n\t\t});\n\n\t\treturn continueActions;\n\t};\n});\n\n","define('app/trial/interactions',['jquery','utils/pubsub','./evaluate','./action'],function($,pubsub,evaluate,activate){\n\t/*\n\t * Organizer for the interaction function\n\t * Allows to subscribe and unsubscribe\n\t *\n\t */\n\tvar subscriptionStack = [];\n\n\tvar interact = function(interactions,input_data){\n\t\t$.each(interactions,function(key,row){\n\t\t\tif (evaluate(row.conditions,input_data)) {\n\t\t\t\t// if this action includes endTrial we want to stop evalutation\n\t\t\t\t// otherwise we might evaluate using data from the next trial by accident...\n\t\t\t\treturn activate(row.actions,input_data);\n\t\t\t}\n\t\t});\n\t};\n\n\treturn {\n\t\tactivate : function(interactions){\n\t\t\t// subscribe to input and interact with each input\n\t\t\tpubsub.subscribe('input',subscriptionStack,function(input_data){\n\t\t\t\tinteract(interactions,input_data);\n\t\t\t});\n\n\t\t\t// start by checking for \"begin\" actions (must be after subscribing!)\n\t\t\tinteract(interactions,{type:'begin', latency:0});\n\t\t},\n\t\tdisable : function(){\n\t\t\t// unsubscribe from all interactions\n\t\t\t$.each(subscriptionStack,function(){\n\t\t\t\tpubsub.unsubscribe(this);\n\t\t\t});\n\t\t}\n\t};\n});\n\n","define('app/trial/trial_constructor',['require','jquery','underscore','utils/pubsub','utils/interface/interface','app/stimulus/stimulus_collection','./interactions','./current_trial','../inflator','app/task/main_view'],function(require){\n\n\tvar $ = require('jquery');\n\tvar _ = require('underscore');\n\tvar pubsub = require('utils/pubsub');\n\tvar input = require('utils/interface/interface');\n\tvar Stimuli = require('app/stimulus/stimulus_collection');\n\tvar interactions = require('./interactions');\n\tvar global_trial = require('./current_trial');\n\tvar inflate = require('../inflator');\n\tvar main = require('app/task/main_view');\n\tvar counter = 0;\n\n\tvar Trial = function(trialData){\n\n\t\t// inflate trial source\n\t\tvar data = inflate(trialData,'trial');\n\n\t\t// extend trial with inflated data @todo maybe get rid of this, we have al the info in _source anyway\n\t\t_.extend(this, data);\n\n\t\t// make sure we always have a data container\n\t\tthis.data || (this.data = {});\n\n\t\t// keep source for later use\n\t\tthis._source = data;\n\n\t\t// create a uniqueId for this trial\n\t\tthis._id = _.uniqueId('trial_');\n\t\tthis.counter = counter++;\n\n\t\t// make sure we have all our stuff :)\n\t\t//if (!this.input) throw new Error('Input module not defined');\n\t\tif (!this.interactions) {\n\t\t\tthrow new Error('Interactions not defined');\n\t\t}\n\n\t\t// add layout stimuli\n\t\tthis._layout_collection = new Stimuli(this.layout || [],{trial:this});\n\n\t\t// add main stimuli\n\t\tthis._stimulus_collection = new Stimuli(this.stimuli  || [],{trial:this});\n\n\t\t// subscription stack\n\t\tthis._pubsubStack = [];\n\n\t\t// the next trial we want to play\n\t\t// by default this is simply the next trial, this can be changed using the goto action\n\t\t// the syntax is [destination, properties]\n\t\tthis._next = ['next',{}];\n\n\t\t// the trial deferred (used to follow when the trial ends)\n\t\tthis.deferred = $.Deferred();\n\t};\n\n\t_.extend(Trial.prototype,{\n\n\t\tactivate: function(){\n\n\t\t\tvar self = this;\n\n\t\t\t// set global trial\n\t\t\tglobal_trial(this);\n\n\t\t\t// display layout elements\n\t\t\tthis._layout_collection.display_all();\n\n\t\t\t// subscribe to end trial\n\t\t\tpubsub.subscribe(\"trial:end\",this._pubsubStack,_.bind(this.deactivate,this));\n\n\t\t\t// subscribe to set attribute\n\t\t\tpubsub.subscribe(\"trial:setAttr\",this._pubsubStack,function(setter,eventData){\n\t\t\t\tif (_.isFunction(setter)) {\n\t\t\t\t\tsetter.apply(self, [self.data,eventData]);\n\t\t\t\t} else {\n\t\t\t\t\t_.extend(self.data,setter);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// subscribe to set input\n\t\t\tpubsub.subscribe(\"trial:setInput\",this._pubsubStack,function(inputData){\n\t\t\t\tinput.add(inputData);\n\t\t\t});\n\n\t\t\t// subscribe to remove input\n\t\t\tpubsub.subscribe(\"trial:removeInput\",this._pubsubStack,function(handleList){\n\t\t\t\tif (handleList == 'All' || _.include(handleList,'All')){\n\t\t\t\t\tinput.destroy();\n\t\t\t\t} else {\n\t\t\t\t\tinput.remove(handleList);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// subscribe to goto\n\t\t\tpubsub.subscribe(\"trial:goto\",this._pubsubStack,function(options){\n\t\t\t\tself._next = [options.destination, options.properties || {}];\n\t\t\t});\n\n\t\t\t// activate input\n\t\t\tinput.add(this.input || []);\n\n\t\t\t// activate stimuli\n\t\t\tthis._stimulus_collection.activate();\n\n\t\t\t// reset the interface timer so that event latencies are relative to now.\n\t\t\tinput.resetTimer();\n\n\t\t\t// listen for interaction\n\t\t\tinteractions.activate(this.interactions);\n\n\t\t\t// return the trial deferred\n\t\t\treturn this.deferred.promise();\n\t\t},\n\n\t\tdeactivate: function(){\n\t\t\tvar self = this;\n\n\t\t\t// cancel all listeners\n\t\t\tinput.destroy();\n\n\t\t\t// disable active stimuli\n\t\t\tthis._stimulus_collection.disable();\n\n\t\t\t// stop interaction listeners\n\t\t\tinteractions.disable();\n\n\t\t\t// unsubscribe\n\t\t\t_.each(this._pubsubStack, function(handle) {\n\t\t\t\tpubsub.unsubscribe(handle);\n\t\t\t});\n\t\t\tthis._pubsubStack = [];\n\n\t\t\t// unset global trial\n\t\t\tglobal_trial(undefined);\n\n\t\t\t// IE7 or lower\n\t\t\t// @todo: improve very ugly solution to ie7 bug, we need the no timeout solution for ipad where this causes a blink\n\t\t\tif (document.all && !document.addEventListener) {\n\t\t\t\t// resolve this trial (inside timeout, to make sure the endtrial subscription ends. ie7 bug)\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t// remove all stimuli from canvas (needs to be inside timeout to prevent blink in some browsers)\n\t\t\t\t\tmain.empty();\n\t\t\t\t\tself.deferred.resolve(self._next[0], self._next[1]);\n\n\t\t\t\t},1);\n\t\t\t} else {\n\t\t\t\t// regular resolve (let the deferred know were we are going next)\n\t\t\t\tmain.empty();\n\t\t\t\tself.deferred.resolve(self._next[0], self._next[1]);\n\t\t\t}\n\t\t},\n\n\t\tname: function(){\n\t\t\t// if we have an alias ues it\n\t\t\tif (this.data.alias) {\n\t\t\t\treturn this.data.alias;\n\t\t\t}\n\t\t\t// otherwise try using the set we inherited from\n\t\t\tif (_.isString(this.inherit)){\n\t\t\t\treturn this.inherit;\n\t\t\t}\n\t\t\tif (_.isPlainObject(this.inherit)){\n\t\t\t\treturn this.inherit.set;\n\t\t\t}\n\t\t\treturn false; // we're out of options here\n\t\t}\n\t});\n\n\treturn Trial;\n});\n","/*\n * Send log chunk\n * returns a function that takes data and sends it to the server after appending any meta data\n */\ndefine('app/task/log/post',['jquery','app/task/settings'],function($, settingsGetter){\n\n\tvar send = function(data){\n\t\tvar settings = settingsGetter();\n\t\tvar url = settings.logger && settings.logger.url\n\t\t\t, deff = $.Deferred();\n\n\t\tif (!url) {\n\t\t\treturn deff.resolve();\n\t\t}\n\n\t\t// build post data\n\t\tvar post = {\n\t\t\tjson: JSON.stringify(data) || \"\"\n\t\t};\n\t\t$.extend(post, settings.metaData || {});\n\n\t\t// lets post our data\n\t\tdeff = $.post(url,post);\n\n\t\t// now, if there was a failure, lets try to resend\n\t\tdeff = deff.then(null,function(){\n\t\t\treturn $.post(url,post);\n\t\t});\n\n\t\treturn deff;\n\t};\n\n\treturn send;\n});\n\n\n","/*\n * Holds the logged rows in serial order\n */\ndefine('app/task/log/log_stack',['require','app/global'],function(require){\n\tvar global = require('app/global');\n\n\treturn function(){\n\t\treturn global().current.logs;\n\t};\n});\n","/*\n * activate logger\n * note that we are loading modules into the global object here (json2)\n */\ndefine('app/task/log/logger',['require','jquery','utils/pubsub','app/trial/current_trial','app/task/settings','./post','./log_stack'],function(require){\n\n\tvar $ = require('jquery')\n\t\t, pubsub = require('utils/pubsub')\n\t\t, trial = require('app/trial/current_trial')\n\t\t, settings = require('app/task/settings')\n\t\t, post = require('./post')\n\t\t, logStackGetter = require('./log_stack');\n\n\t// counter for the last time we sent (it holds the last length for which we sent)\n\tvar lastSend = 0;\n\tvar postDef = $.Deferred().resolve(); // a defered to follow all posting\n\n\tfunction defaultLogger(trialData, inputData, actionData,logStack){\n\n\t\tvar stimList = this._stimulus_collection.get_stimlist();\n\t\tvar mediaList = this._stimulus_collection.get_medialist();\n\n\t\treturn {\n\t\t\tlog_serial : logStack.length,\n\t\t\ttrial_id: this.counter,\n\t\t\tname: this.name(),\n\t\t\tresponseHandle: inputData.handle,\n\t\t\tlatency: Math.floor(inputData.latency),\n\t\t\tstimuli: stimList,\n\t\t\tmedia: mediaList,\n\t\t\tdata: trialData\n\t\t};\n\t}\n\n\t/*\n\t * Send all logs since lastSend\n\t * @returns $.Deferred\n\t */\n\tfunction sendChunk(){\n\t\tvar logChunk; // the log chunk we want to send right now\n\t\tvar logStack = logStackGetter();\n\n\t\t// if  we've already sent everything,  we don't need to do anything\n\t\tif (logStack.length - lastSend <= 0) {\n\t\t\treturn postDef;\n\t\t} else {\n\t\t\t// get the log chunk that we want to send\n\t\t\tlogChunk =  logStack.slice(lastSend, logStack.length);\n\n\t\t\t// reset lastSend counter\n\t\t\tlastSend = logStack.length;\n\t\t\treturn $.when(postDef, post(logChunk));\n\t\t}\n\t}\n\n\t/*\n\t * create log row and push it into log stack\n\t */\n\tpubsub.subscribe('log',function(options, input_data){\n\t\tvar logStack = logStackGetter();\n\t\t// get settings\n\t\tvar logger = settings().logger || {};\n\t\t// get the logger function\n\t\tvar callback = logger.logger ? logger.logger : defaultLogger;\n\n\t\t// add row to log stack\n\t\tvar trialObj = trial();\n\t\tvar row = callback.apply(trialObj,[trialObj.data, input_data, options,logStack]);\n\n\t\tif (logger.meta){\n\t\t\tif ($.isPlainObject(logger.meta)){\n\t\t\t\t$.extend(row, logger.meta);\n\t\t\t} else {\n\t\t\t\tthrow new Error ('LOGGER: logger.meta must be an object but instead was a ' + typeof logger.meta);\n\t\t\t}\n\t\t}\n\n\t\tlogStack.push(row);\n\t});\n\n\t/*\n\t * send logStack to server, but only if it is full\n\t * The end task send is activated directly using the send function\n\t */\n\tpubsub.subscribe('log:send',function(){\n\t\tvar logStack = logStackGetter();\n\t\t// get pulse size\n\t\tvar pulse = settings().logger && settings().logger.pulse;\n\n\t\t// if logStack is full, lets send it\n\t\tif (pulse && logStack.length - lastSend >= pulse) {\n\t\t\tsendChunk();\n\t\t}\n\t});\n\n\treturn sendChunk;\n});\n","define('app/sequencer/player',['require','jquery','./sourceSequence','./trialSequence','app/trial/trial_constructor','app/task/log/logger','app/task/settings','utils/pubsub','app/task/main_view'],function(require){\n\n\tvar $\t\t\t\t\t= require('jquery')\n\t\t, sourceSequence\t= require('./sourceSequence')\n\t\t, trialSequence\t\t= require('./trialSequence')\n\t\t, Trial\t\t\t\t= require('app/trial/trial_constructor')\n\t\t, logger\t\t\t= require('app/task/log/logger')\n\t\t, settingsGetter\t= require('app/task/settings')\n\t\t, pubsub\t\t\t= require('utils/pubsub')\n\t\t, main \t\t\t\t= require('app/task/main_view');\n\n\t/*\n\t * the function that plays the source sequence\n\t */\n\n\t// check if we have another trial, if so plays it, if not ends the task\n\tfunction nextTrial(destination, properties){\n\t\tvar source\n\t\t\t, trial;\n\n\t\t// get next trial\n\t\tswitch (destination){\n\t\t\tcase 'nextWhere':\n\t\t\t\tsource = sourceSequence.nextWhere(properties);\n\t\t\t\tbreak;\n\t\t\tcase 'previousWhere':\n\t\t\t\tsource = sourceSequence.lastWhere(properties);\n\t\t\t\tbreak;\n\t\t\tcase 'current':\n\t\t\t\tsource = sourceSequence.current();\n\t\t\t\tbreak;\n\t\t\tcase 'first':\n\t\t\t\tsource = sourceSequence.first();\n\t\t\t\tbreak;\n\t\t\tcase 'last':\n\t\t\t\tsource = sourceSequence.last();\n\t\t\t\tbreak;\n\t\t\tcase 'end':\n\t\t\t\tsource = sourceSequence.end();\n\t\t\t\tbreak;\n\t\t\tcase 'next' :\n\t\t\t\t/* falls through */\n\t\t\tdefault:\n\t\t\t\tsource = sourceSequence.next(); // get the next trial, in case there are no more trials, returns undefined\n\t\t}\n\n\t\t// if we have another trial play it (next() both returns the next trial and sets it as current)\n\t\tif (source) {\n\t\t\t// create new trial and activate it\n\t\t\ttrial = new Trial(sourceSequence.current());\n\t\t\ttrial\n\t\t\t\t.activate()\t\t\t\t\t\t\t\t// activate the trial\n\t\t\t\t.done(function(){\n\t\t\t\t\tpubsub.publish('log:send');\t\t\t// see if we need to send the log stack\n\t\t\t\t\tnextTrial.apply(null,arguments);\t// when we're done try to play the next one (move arguments on to nextTrial)\n\t\t\t\t});\n\n\t\t\t// let everyone know that we are ready to go\n\t\t\tpubsub.publish(\"trial:activated\",[trial]);\n\n\t\t\t// push trial into the trial sequence\n\t\t\ttrialSequence.add(trial);\n\t\t} else {\n\t\t\t// @TODO: this realy shouldn't be here. this whole function is responsible for too many things...\n\t\t\t//\n\t\t\t// post any data that hasn't been posted yet.\n\t\t\t// and then proceed to the end task hook or to redirect\n\t\t\tlogger()\n\t\t\t\t.always(function(){\n\t\t\t\t\tvar hooks = settingsGetter('hooks') || {};\n\t\t\t\t\treturn $.when(hooks.endTask && hooks.endTask());\n\t\t\t\t})\n\t\t\t\t.always(function(){\n\t\t\t\t\tmain.deferred.resolve();\n\t\t\t\t});\n\t\t}\n\t}\n\n\treturn nextTrial;\n});\n\n","/**\n * Activate pip script\n * @param  {Object} script    The pip script we want to run\n * @param  {?function} done   A function to call once pip is over\n * @return {promise}\n */\ndefine('activatePIP',['require','underscore','app/task/script','app/task/main_view','app/task/parser','app/sequencer/player','app/global'],function(require){\n\n\tvar _ = require('underscore'),\n\t\tmainScript = require('app/task/script'),\n\t\tmain = require('app/task/main_view'),\n\t\tparse = require('app/task/parser'),\n\t\tplay = require('app/sequencer/player'),\n\t\tglobal = require('app/global');\n\n\n\tfunction activate(script, done){\n\n\t\t// init global\n\t\tvar glob = global(global());\n\t\tvar name = script.name || 'anonymous PIP';\n\n\t\t// warn of recurring task name\n\t\tif (glob[name] && console.warn){\n\t\t\tconsole.warn('The task \"' + name + '\" already exists. Overwriting it...');\n\t\t}\n\n\t\t// create local namespace\n\t\tglob[name] = glob.current = (_.isPlainObject(script.current) ? script.current : {});\n\t\tglob.current.logs || (glob.current.logs = []); // init logs object\n\n\t\t// set the main script\n\t\tmainScript(script);\n\n\t\tvar parseDef = parse();\n\n\t\t// activate main view and then display the loading screen\n\t\tmain\n\t\t\t.activate()\n\t\t\t.done(function(){\n\t\t\t\tmain\n\t\t\t\t\t.loading(parseDef) // activate loading screen\n\t\t\t\t\t.done(function(){\n\t\t\t\t\t\tmain.empty(); // remove the loading screen\n\t\t\t\t\t\tplay(); // activate task\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function(src){\n\t\t\t\t\t\tthrow new Error('loading resource failed, do something about it! (you can start by checking the error log, you are probably reffering to the wrong url - ' + src +')');\n\t\t\t\t\t});\n\t\t\t});\n\n\t\treturn main.deferred.promise()\n\t\t\t.then(done || function dfltDone(){\n\t\t\t\tvar redirect = script.settings && script.settings.redirect;\n\t\t\t\twindow.location.href = redirect || window.location.href;\n\t\t\t});\n\t}\n\n\treturn activate;\n});\n","/**\n * Essentialy a defaults object for the scorer\n */\ndefine('pipScorer/computeD',['jquery'],function($){\n\n\t\tfunction ComputeD(){\n\t\t\t$.extend(this, {\n\t\t\t\tdataArray : {}, //The data array or structure the PIP will provide\n\t\t\t\tAnalyzedVar : \"latency\", //The main variable used for the score computation. Usually will be the latency.\n\t\t\t\tErrorVar : \"error\", //The variable that indicates whether there was an error in the response\n\t\t\t\tcondVar:\"\",  //The name of the variable that will store the variables\n\t\t\t\tcond1VarValues: [], //An array with the values of the condVar that will comprise of condition 1 in the comparison\n\t\t\t\tcond2VarValues: [], //An array with the values of the condVar that will comprise of condition 2 in the comparison\n\t\t\t\tparcelVar : \"\",\n\t\t\t\tparcelValue : [],\n\t\t\t\tfastRT : 300, //Below this reaction time, the latency is considered extremely fast.\n\t\t\t\tmaxFastTrialsRate : 0.1, //Above this % of extremely fast responses within a condition, the participant is considered too fast.\n\t\t\t\tminRT : 400, //Below this latency\n\t\t\t\tmaxRT : 10000, //above this\n\t\t\t\tmaxErrorParcelRate: 0.4,\n\t\t\t\terrorLatency : {use:\"latency\", penalty:600, useForSTD:true},\n\t\t\t\tpostSettings : {}\n\t\t\t});\n\t\t}\n\n\t\t$.extend(ComputeD.prototype, {\n\t\t\tsetComputeObject: function(obj){\n\t\t\t\t$.extend(this,obj);\n\t\t\t},\n\n\t\t\tsetDataArray: function(){\n\t\t\t\t// use the real global in order to preven problems with dependencies\n\t\t\t\tvar global = window.piGlobal;\n\n\t\t\t\tthis.dataArray = global.current.logs;\n\t\t\t}\n\n\t\t});\n\n\treturn ComputeD;\n});\n","define('pipScorer/msgMan',['underscore'],function(_){\n\n\tvar messages = {\n\t\tMessageDef:[],\n\t\tmanyErrors: \"There were too many errors made to determine a result.\",\n\t\ttooFast: \"There were too many fast trials to determine a result.\",\n\t\tnotEnough: \"There were not enough trials to determine a result.\"\n\t};\n\n\tfunction Message(){\n\t\t// setup default local messages\n\t\tthis.messages = _.extend({}, messages);\n\t}\n\n\t_.extend(Message.prototype, {\n\n\t\t/**\n\t\t * Setup custom local messages\n\t\t * @param {Object} Obj \tmessages object\n\t\t */\n\t\tsetMsgObject: function(Obj){\n\t\t\t_.extend(this.messages,Obj);\n\t\t},\n\n\t\tgetScoreMsg: function(score){\n\n\t\t\tvar array = this.messages.MessageDef;\n\n\t\t\tif (!array || !array.length){\n\t\t\t\tthrow new Error('You must define a \"MessageDef\" array.');\n\t\t\t}\n\n\t\t\tvar scoreNum = parseFloat(score);\n\t\t\tvar cut = null;\n\t\t\tvar msg = null;\n\t\t\tvar rightMsg = 'error: msg was not set';\n\t\t\tvar set = false;\n\n\t\t\t// @TODO repleace this whole section with a \"_.find()\" or something.\n\t\t\t_.each(array, function(val) {\n\t\t\t\tcut = parseFloat(val.cut);\n\t\t\t\tmsg = val.message;\n\t\t\t\tif (scoreNum<=cut && !set){\n\t\t\t\t\trightMsg = msg;\n\t\t\t\t\tset = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!set){\n\t\t\t\tvar length = array.length;\n\t\t\t\tvar obj = array[length-1];\n\t\t\t\trightMsg = obj.message;\n\t\t\t}\n\n\t\t\treturn rightMsg;\n\t\t},\n\n\t\tgetMessage: function getMessage(type){\n\t\t\treturn this.messages[type];\n\t\t}\n\t});\n\n\treturn Message;\n});\n","define('pipScorer/parcelMng',['underscore'],function(_){\n\n\tfunction ParcelMng(msgMan){\n\t\tthis.parcelArray = []; // Holds parcel array\n\t\tthis.scoreData = {}; // Holds score and error message\n\t\tthis.msgMan = msgMan;\n\t}\n\n\t_.extend(ParcelMng.prototype, {\n\n/*  Method: Void Init\n\tInput: Uses logs from API\n\tOutput: Sets parcelArray with array of type parcel\n\tDescription: Init goes over the log and creates an array of object of type Parcel according to\n\tthe parcelValue array in computeD. Each parcel object holds relevant information regarding the\n\tparcel including an array of trials with the relevant parcel name.\n\n\n*/\n\t\tInit: function(compute){\n\t\t\tvar parcelMng = this;\n\t\t\tvar msgMan = this.msgMan;\n\t\t\t// use the real global in order to prevent problems with dependencies\n\t\t\tvar global = window.piGlobal;\n\n\t\t\tvar data = global.current.logs;\n\t\t\tparcelMng.parcelArray = [];\n\t\t\tparcelMng.scoreData = {};\n\t\t\tparcelMng.msgMan = msgMan;\n\n\t\t\t// get settings\n\t\t\tvar AnalyzedVar = compute.AnalyzedVar;\n\t\t\tvar error = compute.ErrorVar;\n\t\t\tvar parcelVar = compute.parcelVar;\n\t\t\tvar parcels = compute.parcelValue;\n\t\t\tvar min = compute.minRT;\n\t\t\tvar max = compute.maxRT;\n\t\t\tvar fastRT= compute.fastRT;\n\n\t\t\t// set counters\n\t\t\tvar totalScoredTrials = 0;\n\t\t\tvar trialsUnder = 0;\n\t\t\tvar totalTrials=0;\n\t\t\tvar totalErrorTrials =0;\n\t\t\tvar maxFastTrialsRate = parseFloat(compute.maxFastTrialsRate);\n\n\n\t\t\tif (typeof parcels == 'undefined' || parcels.length === 0){\n\t\t\t\ttotalTrials =0;\n\t\t\t\ttotalScoredTrials=0;\n\t\t\t\ttrialsUnder=0;\n\t\t\t\ttotalErrorTrials=0;\n\t\t\t\tvar p = {};\n\t\t\t\tp.name = 'general';\n\t\t\t\tp.trialIData = [];\n\t\t\t\t_.each (data, function (value) {// loop per object in logger\n\t\t\t\t\t\tif (value[AnalyzedVar]>=min && value[AnalyzedVar]<=max){\n\t\t\t\t\t\t\ttotalTrials++;\n\t\t\t\t\t\t\tif (value.data[error] == 1) {\n\t\t\t\t\t\t\t\ttotalErrorTrials++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//p.trialIData.push(value);//push all data\n\t\t\t\t\t\t\t//totalScoredTrials++;\n\t\t\t\t\t\t\tif (parcelMng.validate(p,value,compute)) {\n\t\t\t\t\t\t\t\ttotalScoredTrials++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else {\n\t\t\t\t\t\t\tif (value[AnalyzedVar]<= fastRT) {\n\t\t\t\t\t\t\t\ttrialsUnder++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tparcelMng.checkErrors(totalTrials,totalErrorTrials,compute);\n\t\t\t\tparcelMng.parcelArray[0] = p;\n\t\t\t} else {\n\t\t\t\t_.each (parcels, function(parcelName,index) {// per parcel from parcelValue\n\t\t\t\t\t//set variables calculated per parcel\n\t\t\t\t\ttotalTrials =0;\n\t\t\t\t\ttotalScoredTrials=0;\n\t\t\t\t\ttrialsUnder=0;\n\t\t\t\t\ttotalErrorTrials=0;\n\t\t\t\t\tvar p = {};\n\t\t\t\t\tp.name = parcelName;\n\t\t\t\t\tp.trialIData = [];\n\t\t\t\t\t///////////////////////////////////\n\t\t\t\t\t_.each (data, function (value) {//loop per object in logger\n\t\t\t\t\t\tvar trialParcelName = value.data[parcelVar];\n\n\t\t\t\t\t\t// if this trial belongs to parcel\n\t\t\t\t\t\tif (trialParcelName == parcelName){\n\t\t\t\t\t\t\tif (value[AnalyzedVar]>=min && value[AnalyzedVar]<=max){\n\t\t\t\t\t\t\t\ttotalTrials++;\n\t\t\t\t\t\t\t\tif (value.data[error] == 1) {\n\t\t\t\t\t\t\t\t\ttotalErrorTrials++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//p.trialIData.push(value);//push all data\n\t\t\t\t\t\t\t\t//totalScoredTrials++;\n\t\t\t\t\t\t\t\tif (parcelMng.validate(p,value,compute)) {\n\t\t\t\t\t\t\t\t\ttotalScoredTrials++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}else {\n\t\t\t\t\t\t\t\tif (value[AnalyzedVar]<= fastRT) {\n\t\t\t\t\t\t\t\t\ttrialsUnder++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t});\n\t\t\t\t\tparcelMng.checkErrors(totalTrials,totalErrorTrials,compute);//apply maxErrorParcelRate logic\n\t\t\t\t\tparcelMng.parcelArray[index] = p;\n\t\t\t\t});\n\t\t\t}\n\t\t\tif ( (trialsUnder/totalScoredTrials) > maxFastTrialsRate){\n\t\t\t\tparcelMng.scoreData.errorMessage = this.msgMan.getMessage('tooFast');\n\n\t\t\t}\n\n\t\t},\n\n/*\n\tprivate\n\tMethod: Void checkErrors\n\tInput: totalTrials,totalErrorTrials and compute object.\n\tOutput: Sets scoreData with error message if relevant.\n\tDescription: Helper method to check for errors according to maxErrorParcelRate from compute object.\n\tsets an error message in scoreData.\n\n*/\n\t\tcheckErrors: function(totalTrials,totalErrorTrials,compute){\n\n\t\t\tvar maxErrorParcelRate = compute.maxErrorParcelRate;\n\t\t\tif (totalErrorTrials/totalTrials > maxErrorParcelRate){\n\t\t\t\tthis.scoreData.errorMessage = this.msgMan.getMessage('manyErrors');\n\n\t\t\t}\n\n\t\t},\n\n/* Function: Void validate.\n\tInput: parcel object, trial object from the log and the compute object.\n\tOutput: Pushes the trial to the parcel based on information from errorLatency. Returns true/false.\n\tDescription: Helper method to apply errorLatency logic. If set to 'latency' trials witch are error\n\twould be added to the parcel trial array. if set to false trials that are error would not be added,\n\tif set to panelty error trials will be added and later panelized.\n\n*/\n\n\t\tvalidate: function(p,value,compute){\n\t\t\tvar errorLatency = compute.errorLatency;\n\t\t\tvar error = compute.ErrorVar;\n\t\t\tvar data = value.data;\n\n\n\t\t\tif (errorLatency.use =='latency'){\n\t\t\t\tp.trialIData.push(value);\n\t\t\t\treturn true;\n\t\t\t}else{\n\t\t\t\tif (errorLatency.use =='false'){\n\t\t\t\t\tif(data[error]=='1'){\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tp.trialIData.push(value);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(errorLatency.use =='penalty'){\n\t\t\t\t\tp.trialIData.push(value);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n/*  Function: Void addPenalty.\n\tInput: parcel object and the compute object.\n\tOutput: adds penalty to latency of trials\n\tDescription: Helper method to add average and penalty to error trials\n\tif errorLatency is set to 'penalty'. Should be called after avgAll.\n\n*/\n\n\t\taddPenalty: function(p,compute){\n\t\t\tvar errorLatency = compute.errorLatency;\n\t\t\tvar parcelMng = this;\n\n\n\t\t\tif (errorLatency.use == 'penalty'){\n\n\t\t\t\tvar penalty = parseFloat(errorLatency.penalty);\n\t\t\t\tvar ErrorVar = compute.ErrorVar;\n\t\t\t\tvar AnalyzedVar = compute.AnalyzedVar;\n\t\t\t\tvar condVar = compute.condVar;\n\t\t\t\tvar cond1 = compute.cond1VarValues;\n\t\t\t\tvar cond2 = compute.cond2VarValues;\n\t\t\t\tvar trialIData = p.trialIData;\n\t\t\t\tvar avg1 = p.avgCon1;\n\t\t\t\tvar avg2 = p.avgCon2;\n\n\n\t\t\t\t_.each (trialIData, function (value) {\n\t\t\t\t\tvar data = value.data;\n\t\t\t\t\tvar error = data[ErrorVar];\n\t\t\t\t\tvar dataCond = data[condVar];\n\t\t\t\t\tvar diff1 = parcelMng.checkArray(dataCond,cond1);\n\t\t\t\t\tvar diff2 = parcelMng.checkArray(dataCond,cond2);\n\n\t\t\t\t\tif (error=='1'){\n\t\t\t\t\t\tif (diff1){\n\t\t\t\t\t\t\tvalue[AnalyzedVar] += avg1+ penalty;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tif (diff2){\n\t\t\t\t\t\t\t\tvalue[AnalyzedVar] += avg2+ penalty;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t}\n\t\t},\n\n/*  Function: Void avgAll.\n\tInput: compute object.\n\tOutput: setting avgCon1 and avgCon2\n\tDescription: Loop over the parcels and Set average for condition 1 trials and for condition 2 trials.\n\n*/\n\n\t\tavgAll: function(compute){\n\t\t\tvar parcelMng = this;\n\t\t\t_.each(parcelMng.parcelArray, function (value) {\n\t\t\t\tparcelMng.avgParcel(value,compute);\n\t\t\t});\n\t\t},\n\n\n/*\n\tprivate\n\tFunction: Void avgParcel.\n\tInput: compute object, parcel.\n\tOutput: setting avgCon1 and avgCon2 in parcel.\n\tDescription: Set average for condition 1 trials and for condition 2 trials in the parcel.\n\n*/\n\n\t\tavgParcel: function(p,compute){\n\t\t\tvar parcelMng = this;\n\t\t\tvar trialIData = p.trialIData;\n\t\t\tvar condVar = compute.condVar;\n\t\t\tvar cond1 = compute.cond1VarValues;\n\t\t\tvar cond2 = compute.cond2VarValues;\n\t\t\tvar AnalyzedVar = compute.AnalyzedVar;\n\t\t\tvar avgCon1 = 0;\n\t\t\tvar avgCon2 = 0;\n\t\t\tvar avgBoth = 0;\n\t\t\tvar numCond1 = 0;\n\t\t\tvar numCond2 = 0;\n\t\t\tvar numBoth = 0;\n\n\t\t\t_.each (trialIData, function (value) {\n\n\t\t\t\tvar AnVar = value[AnalyzedVar];\n\t\t\t\tvar data = value.data;\n\t\t\t\tavgBoth += AnVar;\n\t\t\t\tnumBoth ++;\n\t\t\t\t//var diff1 = ( _(data[condVar]).difference(cond1) );\n\t\t\t\t//var diff2 = ( _(data[condVar]).difference(cond2) );\n\t\t\t\tvar dataCond = data[condVar];\n\t\t\t\tvar diff1 = parcelMng.checkArray(dataCond,cond1);\n\t\t\t\tvar diff2 = parcelMng.checkArray(dataCond,cond2);\n\n\t\t\t\tif (diff1) {\n\t\t\t\t\tnumCond1++;\n\t\t\t\t\tavgCon1 += AnVar;\n\t\t\t\t} else {\n\t\t\t\t\tif (diff2){\n\t\t\t\t\t\tnumCond2++;\n\t\t\t\t\t\tavgCon2 += AnVar;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t});\n\t\t\tif (numCond1 <= 2 || numCond2 <= 2){\n\t\t\t\tparcelMng.scoreData.errorMessage = this.msgMan.getMessage(\"notEnough\");\n\t\t\t}\n\t\t\tif (numCond1 !== 0) {\n\t\t\t\tavgCon1 = avgCon1/numCond1;\n\t\t\t}\n\t\t\tif (numCond2 !== 0) {\n\t\t\t\tavgCon2 = avgCon2/numCond2;\n\t\t\t}\n\t\t\tp.avgCon1 = avgCon1;\n\t\t\tp.avgCon2 = avgCon2;\n\t\t\tp.diff = p.avgCon1 - p.avgCon2;\n\t\t\tif (numBoth !== 0) {\n\t\t\t\tp.avgBoth = avgBoth/numBoth;\n\t\t\t}\n\t\t\tparcelMng.addPenalty(p,compute);\n\t\t},\n\n/*  Function: Void checkArray.\n\tInput: the condition from the trial and an array of condition from computeD object.\n\tOutput: return true if condition is in the array.\n\tDescription: Helper function that returns true if condition is in the array or false otherwise.\n\n*/\n\n\t\tcheckArray: function(conFromData,con){\n\t\t\tfor(var i=0; i<con.length; i++){\n\t\t\t\tvar condition = con[i];\n\t\t\t\tif (condition == conFromData ){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\n/*  Function: Void varianceAll.\n\tInput: compute object, parcel.\n\tOutput: variance variable in parcel.\n\tDescription: Loop over the parcels and set the variance variable.\n\n*/\n\n\t\tvarianceAll: function(compute){\n\t\t\tvar parcelMng = this;\n\t\t\t_.each (parcelMng.parcelArray, function (value) {\n\t\t\t\tparcelMng.varianceParcel(value,compute);\n\t\t\t});\n\t\t},\n\n/*  Function: Void varianceParcel.\n\tInput: compute object, parcel.\n\tOutput: setting variance variable in parcel.\n\tDescription: goes over the trials of the parcel and calculate variance.\n\n*/\n\t\tvarianceParcel: function(p,compute){\n\t\t\tvar parcelMng = this;\n\t\t\tvar AnalyzedVar = compute.AnalyzedVar;\n\t\t\tvar trialIData = p.trialIData;\n\t\t\tvar cond1 = compute.cond1VarValues;\n\t\t\tvar cond2 = compute.cond2VarValues;\n\t\t\tvar condVar = compute.condVar;\n\t\t\tvar avg = p.avgBoth;\n\t\t\tvar d = 0;\n\t\t\tvar x2 = 0;\n\t\t\tvar pooledCond1 = [];\n\t\t\tvar pooledCond2 = [];\n\t\t\tvar pooledData = [];\n\t\t\tvar errorLatency = compute.errorLatency;\n\t\t\tvar useForSTD = errorLatency.useForSTD;\n\n\n\t\t\t_.each (trialIData, function (value) {//pool to one array\n\t\t\t\tvar data = value.data;\n\t\t\t\tvar AnVar = value[AnalyzedVar];\n\t\t\t\tvar ErrorVar = compute.ErrorVar;\n\t\t\t\tvar error = data[ErrorVar];\n\t\t\t\tvar dataCond = data[condVar];\n\t\t\t\tvar diff1 = parcelMng.checkArray(dataCond,cond1);\n\t\t\t\tvar diff2 = parcelMng.checkArray(dataCond,cond2);\n\t\t\t\t//var diff1 = ( _(data[condVar]).difference(cond1) );\n\t\t\t\t//var diff2 = ( _(data[condVar]).difference(cond2) );\n\t\t\t\tif (diff1) {\n\t\t\t\t\tif (useForSTD){\n\t\t\t\t\t\tpooledCond1.push(AnVar);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif (error=='0') {\n\t\t\t\t\t\t\tpooledCond1.push(AnVar);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (diff2){\n\t\t\t\t\t\tif (useForSTD){\n\t\t\t\t\t\t\tpooledCond2.push(AnVar);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tif (error=='0') {\n\t\t\t\t\t\t\t\tpooledCond1.push(AnVar);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t});\n\n\t\t\tpooledData = pooledCond1.concat(pooledCond2);\n\t\t\t_.each (pooledData, function (value) {//pool to one array\n\t\t\t\tvar AnVar = value;\n\t\t\t\td = AnVar-avg;\n\t\t\t\tx2 += d*d;\n\n\t\t\t});\n\t\t\tp.variance = x2/(pooledData.length-1);\n\t\t},\n\n\n/*  Function: Void scoreAll.\n\tInput: compute object.\n\tOutput: score variable in scoreData object\n\tDescription: Average the scores from all parcels set score in scoreData object.\n\n*/\n\t\tscoreAll: function(compute){\n\t\t\tvar parcelMng = this;\n\t\t\tvar dAvg = 0;\n\t\t\t_.each (parcelMng.parcelArray, function (value) {\n\t\t\t\tparcelMng.scoreParcel(value,compute);\n\t\t\t\tdAvg +=  value.score;\n\t\t\t});\n\t\t\tvar score = (dAvg/(parcelMng.parcelArray.length));\n\t\t\tparcelMng.scoreData.score = score.toFixed(2);\n\n\t\t},\n\n/*\n\tprivate\n\tFunction: Void scoreParcel.\n\tInput: compute object, parcel.\n\tOutput: score variable in parcel\n\tDescription: Calculate the score for the parcel.\n\n*/\n\t\tscoreParcel: function(p){\n\t\t\tvar parcelMng = this;\n\t\t\tvar sd = Math.sqrt(p.variance);\n\t\t\tif (sd === 0){\n\t\t\t\tparcelMng.scoreData.errorMessage = this.msgMan.getMessage(\"notEnough\");\n\t\t\t\tp.score = p.diff;\n\t\t\t} else {\n\t\t\t\tp.score = p.diff/sd;\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn ParcelMng;\n});\n","define('pipScorer/Scorer',['jquery','./computeD','./msgMan','./parcelMng'],function($,ComputeData,MsgMan,ParcelMng){\n\n\n\t// Description: make sure console.log is safe among all browsers.\n\t// js hint thinks that console is read only - and its correct except where it doesn't exist...  this is how we tell it to ignore these lines\n\t/* jshint -W020 */\n\t!!window.console || (console = {log: $.noop, error: $.noop});\n\tconsole.log || (console.log = function(){});\n\t/* jshint +W020 */\n\n\n\n\tfunction Scorer(){\n\t\tthis.computeData = new ComputeData();\n\t\tthis.msgMan = new MsgMan();\n\t\tthis.parcelMng = new ParcelMng(this.msgMan);\n\t}\n\n\t$.extend(Scorer.prototype, {\n\n\t\t/**\n\t\t * Set settings for computeD or msgMan\n\t\t * @param {String} type 'compute' or 'message' - the type of settingsObj to set\n\t\t * @param {Object} Obj  The settings object itself\n\t\t */\n\t\taddSettings: function(type,Obj){\n\t\t\tswitch (type){\n\t\t\t\tcase 'compute':\n\t\t\t\t\tthis.computeData.setComputeObject(Obj);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'message':\n\t\t\t\t\tthis.msgMan.setMsgObject(Obj);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('SCORER:addSettings: unknow \"type\" ' + type);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Calculate the score\n\t\t * @return {Object} an object that holds the score and an error message\n\t\t */\n\t\tcomputeD: function(){\n\t\t\tvar computeData = this.computeData;\n\t\t\tvar parcelMng = this.parcelMng;\n\n\t\t\tcomputeData.setDataArray();\n\n\t\t\tparcelMng.Init(computeData);\n\t\t\tparcelMng.avgAll(computeData);\n\n\t\t\tparcelMng.varianceAll(computeData);\n\t\t\tparcelMng.scoreAll(computeData);\n\n\t\t\tvar scoreObj = parcelMng.scoreData;\n\t\t\tvar scoreData = {};\n\n\t\t\tif (scoreObj.errorMessage === undefined || scoreObj.errorMessage === null){\n\t\t\t\tscoreData.FBMsg = this.getFBMsg(scoreObj.score);\n\t\t\t\tscoreData.DScore = scoreObj.score;\n\t\t\t}else{\n\t\t\t\tscoreData.FBMsg = scoreObj.errorMessage;\n\t\t\t\tscoreData.DScore = \"\";\n\t\t\t}\n\n\t\t\treturn scoreData;\n\t\t},\n\n\t\t/**\n\t\t * Post the score and message to the server\n\t\t * @param  {[type]} score    [description]\n\t\t * @param  {[type]} msg      [description]\n\t\t * @param  {String} scoreKey The key with which to send the score data\n\t\t * @param  {String} msgKey   The key with which to send the msg data\n\t\t * @return {promise}         A promise that is resolved with the post\n\t\t */\n\t\tpostToServer: function(score,msg,scoreKey,msgKey){\n\t\t\tvar postSettings = this.computeData.postSettings || {};\n\t\t\tvar url = postSettings.url;\n\t\t\tvar data = {};\n\n\t\t\tif (!scoreKey) {\n\t\t\t\tscoreKey = postSettings.score;\n\t\t\t}\n\n\t\t\tif (!msgKey) {\n\t\t\t\tmsgKey = postSettings.msg;\n\t\t\t}\n\n\t\t\t// create post object\n\t\t\tdata[scoreKey] = score;\n\t\t\tdata[msgKey] = msg;\n\n\t\t\treturn $.post(url,JSON.stringify(data));\n\t\t},\n\n\t\t/**\n\t\t * Blindly post all \"data\" to the server\n\t\t * @param  {Object} data Arbitrary data to be sent to the server\n\t\t * @return {promise}      A promise that is resolved with the post\n\t\t */\n\t\tdynamicPost: function(data){\n\t\t\tvar postSettings = this.computeData.postSettings || {};\n\t\t\tvar url = postSettings.url;\n\n\t\t\treturn $.post(url,JSON.stringify(data));\n\t\t},\n\n\t\t// get message according to user input\n\t\tgetFBMsg: function(DScore){\n\t\t\tvar msg = this.msgMan.getScoreMsg(DScore);\n\t\t\treturn msg;\n\t\t}\n\n\t});\n\treturn Scorer;\n});\ndefine('pipScorer', ['pipScorer/Scorer'], function (main) { return main; });\n\n","define('pipAPI',['require','underscore'],function(require){\n\n\tvar _ = require('underscore');\n\n\t/**\n\t * Constructor for PIPlayer script creator\n\t * @return {Object}\t\tScript creator\n\t */\n\tfunction API(name){\n\t\tthis.script = {\n\t\t\tglobal: {}, // the real global should be extended with this\n\t\t\tcurrent: {}, // this is the actual namespace for this PIP\n\t\t\ttrialSets: {},\n\t\t\tstimulusSets: {},\n\t\t\tmediaSets: {},\n\t\t\tsequence: []\n\t\t};\n\n\t\tthis.script.name = name || 'anonymous PIP';\n\n\t\tthis.settings = this.script.settings = {\n\t\t\tcanvas: {\n\t\t\t\tmaxWidth: 800,\n\t\t\t\tproportions: 0.8\n\t\t\t},\n\t\t\thooks: {}\n\t\t};\n\t}\n\n\t_.extend(API.prototype, {\n\n\t\t// add set function\n\t\taddTrialSets: add_set('trial'),\n\t\taddStimulusSets: add_set('stimulus'),\n\t\taddMediaSets: add_set('media'),\n\n\t\t// settings\n\t\taddSettings: function(name, settingsObj){\n\t\t\tvar settings;\n\n\t\t\tif (_.isPlainObject(settingsObj)){\n\t\t\t\tsettings = this.settings[name] = this.settings[name] || {};\n\t\t\t\t_.extend(settings, settingsObj);\n\t\t\t} else {\n\t\t\t\tthis.settings[name] = settingsObj;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\n\t\taddSequence: function(sequence){\n\t\t\tvar script = this.script;\n\t\t\t_.isArray(sequence) || (sequence = [sequence]);\n\n\t\t\tscript.sequence = script.sequence.concat(sequence);\n\n\t\t\treturn this;\n\t\t},\n\n\t\taddGlobal: function(global){\n\t\t\tif (!_.isPlainObject(global)){\n\t\t\t\tthrow new Error('global must be an object');\n\t\t\t}\n\t\t\t_.merge(this.global(), global);\n\t\t},\n\n\t\tgetGlobal: function(){\n\t\t\treturn window.piGlobal;\n\t\t},\n\n\t\taddCurrent: function(current){\n\t\t\tif (!_.isPlainObject(current)){\n\t\t\t\tthrow new Error('current must be an object');\n\t\t\t}\n\t\t\t_.merge(this.script.current, current);\n\t\t},\n\n\t\tgetCurrent: function(){\n\t\t\treturn this.script.current;\n\t\t},\n\n\t\t// push a whole script\n\t\taddScript: function(obj){\n\t\t\t_.merge(this.script,obj);\n\t\t},\n\n\t\t// returns script (for debuging probably)\n\t\tgetScript: function(){\n\t\t\treturn this.script;\n\t\t},\n\n\t\tgetLogs: function(){\n\t\t\treturn this.script.current.logs;\n\t\t},\n\n\t\t// run the player, returns deferred\n\t\tplay: function(){\n\t\t\tthrow new Error('you should return API.script instead of calling API.play()!!');\n\t\t}\n\n\t});\n\n\treturn API;\n\n\t /**\n\t  * Create a function that adds sets of a scpecific type\n\t  * @param {String} type  \tThe type of set setter to create\n\t  * @returns {Function} \tA setter object\n\t  */\n\tfunction add_set(type){\n\n\t\t/**\n\t\t * Adds a set to the targetSet\n\t\t * @param {String, Object} set    \tEither full set object, or the name of this setArr\n\t\t * @param {Array} setArr \t\t\tAn array of objects for this set\n\t\t * @returns {Object} The API object\n\t\t *\n\t\t * use examples:\n\t\t * fn({\n\t\t *   intro: [intro1, intro2],\n\t\t *   Default: [defaultTrial]\n\t\t * })\n\t\t * fn('intro',[intro1, intro2])\n\t\t * fn('Default',defaultTrial)\n\t\t *\n\t\t */\n\t\tfunction setSetter(set, setArr){\n\t\t\t// get the sets we want to extend (or create them)\n\t\t\tvar targetSets = this.script[type + \"Sets\"] || (this.script[type + \"Sets\"] = {});\n\n\t\t\tvar i;\n\t\t\t// if we get an explicit object, simply extend the set\n\t\t\tif (_.isPlainObject(set)) {\n\t\t\t\t_.merge(targetSets, set);\n\t\t\t}\n\n\t\t\t// if we got a named object\n\t\t\telse {\n\t\t\t\t// make sure the objects to add are wrapped in an array\n\t\t\t\t_.isArray(setArr) || (setArr = [setArr]);\n\t\t\t\ttargetSets[set] || (targetSets[set] = []);\n\n\t\t\t\t// merge the objects into the targetSet\n\t\t\t\tfor (i=0;i<setArr.length; i++){\n\t\t\t\t\ttargetSets[set].push(setArr[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn setSetter;\n\t}\n});\n"]}